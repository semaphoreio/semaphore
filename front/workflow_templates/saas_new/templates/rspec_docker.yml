version: v1.0
name: "💎 Ruby CI Pipeline"

# ---------------------------------------------------------------------
# GLOBAL SETTINGS
# ---------------------------------------------------------------------
agent:
  machine:
    type: {{ machine_type }}        # Filled by template variables
    os_image: {{ os_image }}

  # Containers run side-by-side on the VM
  containers:
    - name: main
      image: 'registry.semaphoreci.com/ruby:3.2.2-node-browsers'   # Ruby 3.2.2 + Node 20 + browsers
    - name: postgres
      image: 'registry.semaphoreci.com/postgres:17'                # PostgreSQL 17
    - name: redis
      image: 'registry.semaphoreci.com/redis:7.0'                  # Redis 7.0

# Fast feedback & cost control
fail_fast:
  stop:
    when: branch != 'main'          # Abort early on non-main branches
auto_cancel:
  running:
    when: branch != 'main'          # Cancel older running pipelines on feature branches
  queued:
    when: branch = 'main'           # Keep main’s queue clean

# Common pre-steps for every job
global_job_config:
  prologue:
    commands:
      - checkout                    # Grab the code
      - cache restore               # Pull dependencies & packs from cache

# ---------------------------------------------------------------------
# WORKFLOW
# ---------------------------------------------------------------------
blocks:
  # ---------------- SETUP ----------------
  - name: "🛠 Setup & Cache"
    task:
      jobs:
        - name: Install Gems & JS deps
          commands:
            - 'curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.19'
            - 'export PATH="$HOME/.yarn/bin:$PATH"'          
            - yarn install --frozen-lockfile                     # Install JS deps
            - bundle install --deployment --path vendor/bundle   # Install Ruby gems
            - gem install --no-document semaphore_test_boosters  # ⏩ Boosters gem
            - cache store                                        # Save vendor/bundle & node_modules
    dependencies: []

  # ------------- FRONT-END BUILD -------------
  - name: "🖼️ Webpacker Build"
    task:
      jobs:
        - name: Compile Assets
          commands:
            - cache restore webpacker-assets                     # Reuse previous packs if present
            - bundle exec rake webpacker:compile                 # Produce packs for tests
            - cache store webpacker-assets public/packs          # Save packs for later blocks
    dependencies:
      - "🛠 Setup & Cache"

  # ------------- CODE QUALITY -------------
  - name: "🔍 ESLint & Stylelint"
    task:
      jobs:
        - name: JS / CSS Lint
          commands:
            - 'curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.19'
            - 'export PATH="$HOME/.yarn/bin:$PATH"'         
            - yarn run eslint .                # Lint JavaScript
            - yarn run stylelint '**/*.scss'   # Lint SCSS
    dependencies:
      - "🖼️ Webpacker Build"

  - name: "🧹 RuboCop"
    task:
      jobs:
        - name: Ruby Style Check
          commands:
            - bundle exec rubocop             # Enforce Ruby style
    dependencies:
      - "🛠 Setup & Cache"

  # ------------- SECURITY -------------
  - name: "🛡️ Brakeman"
    task:
      jobs:
        - name: Static Analysis
          commands:
            - bundle exec brakeman --force    # Rails security scan
    dependencies:
      - "🛠 Setup & Cache"

  - name: "🛡️ Bundler Audit"
    task:
      jobs:
        - name: Gem CVE Check
          commands:
            - bundle exec bundle-audit check --update
    dependencies:
      - "🛠 Setup & Cache"

  # ------------- TEST SUITE (Boosters) -------------
  - name: "🚦 RSpec Suite"
    task:
      env_vars:
        - name: RAILS_ENV
          value: test              # Use the test environment
        - name: PGHOST
          value: 127.0.0.1         # PostgreSQL host (service container)
        - name: PGUSER
          value: postgres          # PostgreSQL user
      jobs:
        - name: "🟢 RSpec Tests"
          parallelism: 5                       # Split across 5 nodes
          commands:
            - cache restore webpacker-assets   # Pull precompiled packs
            - bundle exec rake db:setup        # Build fresh test DB
            # Automatic test splitting via Semaphore Boosters
            - rspec_booster --job "$SEMAPHORE_JOB_INDEX/$SEMAPHORE_JOB_COUNT" --format RspecJunitFormatter --out report.xml --format documentation
      epilogue:
        always:
          commands:
            - '[[ -f report.xml ]] && test-results publish report.xml'
    dependencies:
      - "🧹 RuboCop"
      - "🛡️ Brakeman"
      - "🛡️ Bundler Audit"
      - "🖼️ Webpacker Build"

# ---------------------------------------------------------------------
# PIPELINE SUMMARY
# ---------------------------------------------------------------------
after_pipeline:
  task:
    jobs:
      - name: "📊 Merge Results"
        commands:
          - test-results gen-pipeline-report   # Collate JUnit reports
