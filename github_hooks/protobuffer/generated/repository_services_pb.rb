# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: repository.proto for package 'InternalApi.Repository'

require 'grpc'
require_relative 'repository_pb'

module InternalApi
  module Repository
    module RepositoryService
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'InternalApi.Repository.RepositoryService'

        #
        # Operation is called to get details about repository.
        # Operation is synchronous.
        # Returns GRPC error in case the repository isn't found.
        #
        rpc :Describe, ::InternalApi::Repository::DescribeRequest, ::InternalApi::Repository::DescribeResponse
        #
        # Operation is called to get details about repositories.
        # Operation is synchronous.
        # Returns GRPC error in case repositories can't be returned.
        #
        rpc :DescribeMany, ::InternalApi::Repository::DescribeManyRequest, ::InternalApi::Repository::DescribeManyResponse
        #
        # @deprecated Use DescribeMany instead.
        # Operation is called to get list of repositories for given projects.
        # Operation is synchronous.
        # Returns GRPC error in case list can't be returned.
        #
        rpc :List, ::InternalApi::Repository::ListRequest, ::InternalApi::Repository::ListResponse
        #
        # Operation is called to create new repository.
        # Operation is synchronous.
        # Returns GRPC error in case repository can't be created.
        #
        rpc :Create, ::InternalApi::Repository::CreateRequest, ::InternalApi::Repository::CreateResponse
        #
        # Operation is called to update a repository.
        # When repository url changes - in addition to regular update operation -
        # deploy key and webhook are regenerated.
        #
        # Operation is synchronous.
        # Returns GRPC error in case repository can't be updated.
        #
        rpc :Update, ::InternalApi::Repository::UpdateRequest, ::InternalApi::Repository::UpdateResponse
        #
        # Operation is called to delete repository.
        # Operation is synchronous.
        # Returns GRPC error in case repository can't be deleted.
        #
        rpc :Delete, ::InternalApi::Repository::DeleteRequest, ::InternalApi::Repository::DeleteResponse
        #
        # Operation is called to get file from Repository.
        # Operation is synchronous.
        #
        rpc :GetFile, ::InternalApi::Repository::GetFileRequest, ::InternalApi::Repository::GetFileResponse
        #
        # Operation is called to get files from Repository.
        # Operation is synchronous.
        #
        rpc :GetFiles, ::InternalApi::Repository::GetFilesRequest, ::InternalApi::Repository::GetFilesResponse
        #
        # Operation is called to get changes for a commit range.
        # Operation is synchronous.
        #
        rpc :GetChangedFilePaths, ::InternalApi::Repository::GetChangedFilePathsRequest, ::InternalApi::Repository::GetChangedFilePathsResponse
        #
        # Operation is called to commit to the repo.
        # Operation is synchronous.
        #
        rpc :Commit, ::InternalApi::Repository::CommitRequest, ::InternalApi::Repository::CommitResponse
        #
        # Operation is called to get SSH key from Repository.
        # Operation is synchronous.
        #
        rpc :GetSshKey, ::InternalApi::Repository::GetSshKeyRequest, ::InternalApi::Repository::GetSshKeyResponse
        #
        # Returns a list of repositories that is accessible for a given user on a given integration.
        #
        rpc :ListAccessibleRepositories, ::InternalApi::Repository::ListAccessibleRepositoriesRequest, ::InternalApi::Repository::ListAccessibleRepositoriesResponse
        #
        # Returns a list of collaborators, with permission level, for requested repository.
        #
        rpc :ListCollaborators, ::InternalApi::Repository::ListCollaboratorsRequest, ::InternalApi::Repository::ListCollaboratorsResponse
        #
        # Returns a list of collaborators, with permission level, for requested repository.
        #
        rpc :CreateBuildStatus, ::InternalApi::Repository::CreateBuildStatusRequest, ::InternalApi::Repository::CreateBuildStatusResponse
        #
        # Fetches a repository's deploy key from a git platform
        #
        rpc :CheckDeployKey, ::InternalApi::Repository::CheckDeployKeyRequest, ::InternalApi::Repository::CheckDeployKeyResponse
        #
        # Regenerates a deploy key for a repository.
        #
        rpc :RegenerateDeployKey, ::InternalApi::Repository::RegenerateDeployKeyRequest, ::InternalApi::Repository::RegenerateDeployKeyResponse
        #
        # Checks a git webhook for a repository.
        # If the webhook is not found or is invalid, it will return an error.
        #
        rpc :CheckWebhook, ::InternalApi::Repository::CheckWebhookRequest, ::InternalApi::Repository::CheckWebhookResponse
        #
        # Regenerate a git webhook for a repository
        #
        rpc :RegenerateWebhook, ::InternalApi::Repository::RegenerateWebhookRequest, ::InternalApi::Repository::RegenerateWebhookResponse
        #
        # Forks and creates a repository based on the source repository.
        #
        rpc :Fork, ::InternalApi::Repository::ForkRequest, ::InternalApi::Repository::ForkResponse
        #
        # Fetches information about remote repository.
        #
        rpc :DescribeRemoteRepository, ::InternalApi::Repository::DescribeRemoteRepositoryRequest, ::InternalApi::Repository::DescribeRemoteRepositoryResponse
        #
        # Fetches information about revision.
        #
        rpc :DescribeRevision, ::InternalApi::Repository::DescribeRevisionRequest, ::InternalApi::Repository::DescribeRevisionResponse
        #
        # Verifies if incoming webhook is correctly signed.
        #
        rpc :VerifyWebhookSignature, ::InternalApi::Repository::VerifyWebhookSignatureRequest, ::InternalApi::Repository::VerifyWebhookSignatureResponse
        #
        # Clears external data (e.g., webhook, deploy key) associated with the repository,
        # without deleting internal database data.
        # Operation is synchronous.
        # Returns GRPC error in case the external data can't be cleared.
        #
        rpc :ClearExternalData, ::InternalApi::Repository::ClearExternalDataRequest, ::InternalApi::Repository::ClearExternalDataResponse
        # Regenerates a webhook secret for a repository.
        # Works only for git agnostic repositories.
        # Operation is synchronous.
        rpc :RegenerateWebhookSecret, ::InternalApi::Repository::RegenerateWebhookSecretRequest, ::InternalApi::Repository::RegenerateWebhookSecretResponse
      end

      Stub = Service.rpc_stub_class
    end
    #
    # Operations in this service can fail returning status code and messages as per https://grpc.io/docs/guides/status-codes/:
    #
    # - FAILED_PRECONDITION - returned when validation error occurs, the message will contain the reason and it's safe to show it to the user.
    # - RESOURCE_EXHAUSTED - returned when the resource limit is reached, the message is static - "Limit of API calls to external provider reached"
    # - UNKNOWN - returned for unknown errors, the message is static - "Unhandled error. Please contact support."
    #
    # For other error codes, the message depends on the error code, but it's generally not safe to show it to the user.
    #
  end
end
