// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.17.3
// source: semaphore/artifacts.v1.proto

package semaphore_artifacts_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	ArtifactsService_GenerateSignedURLs_FullMethodName = "/semaphore.artifacts.v1.ArtifactsService/GenerateSignedURLs"
)

// ArtifactsServiceClient is the client API for ArtifactsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// all operations are synchronous
type ArtifactsServiceClient interface {
	GenerateSignedURLs(ctx context.Context, in *GenerateSignedURLsRequest, opts ...grpc.CallOption) (*GenerateSignedURLsResponse, error)
}

type artifactsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewArtifactsServiceClient(cc grpc.ClientConnInterface) ArtifactsServiceClient {
	return &artifactsServiceClient{cc}
}

func (c *artifactsServiceClient) GenerateSignedURLs(ctx context.Context, in *GenerateSignedURLsRequest, opts ...grpc.CallOption) (*GenerateSignedURLsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GenerateSignedURLsResponse)
	err := c.cc.Invoke(ctx, ArtifactsService_GenerateSignedURLs_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtifactsServiceServer is the server API for ArtifactsService service.
// All implementations should embed UnimplementedArtifactsServiceServer
// for forward compatibility
//
// all operations are synchronous
type ArtifactsServiceServer interface {
	GenerateSignedURLs(context.Context, *GenerateSignedURLsRequest) (*GenerateSignedURLsResponse, error)
}

// UnimplementedArtifactsServiceServer should be embedded to have forward compatible implementations.
type UnimplementedArtifactsServiceServer struct {
}

func (UnimplementedArtifactsServiceServer) GenerateSignedURLs(context.Context, *GenerateSignedURLsRequest) (*GenerateSignedURLsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateSignedURLs not implemented")
}

// UnsafeArtifactsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ArtifactsServiceServer will
// result in compilation errors.
type UnsafeArtifactsServiceServer interface {
	mustEmbedUnimplementedArtifactsServiceServer()
}

func RegisterArtifactsServiceServer(s grpc.ServiceRegistrar, srv ArtifactsServiceServer) {
	s.RegisterService(&ArtifactsService_ServiceDesc, srv)
}

func _ArtifactsService_GenerateSignedURLs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateSignedURLsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtifactsServiceServer).GenerateSignedURLs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArtifactsService_GenerateSignedURLs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtifactsServiceServer).GenerateSignedURLs(ctx, req.(*GenerateSignedURLsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ArtifactsService_ServiceDesc is the grpc.ServiceDesc for ArtifactsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ArtifactsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "semaphore.artifacts.v1.ArtifactsService",
	HandlerType: (*ArtifactsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateSignedURLs",
			Handler:    _ArtifactsService_GenerateSignedURLs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "semaphore/artifacts.v1.proto",
}
