version: v1.0
name: Generate Helm Chart
agent:
  machine:
    type: e2-standard-2
    os_image: ubuntu2004
blocks:
  - name: Build images
    task:
      env_vars:
        - name: RAILS_ENV
          value: "production"
        - name: MIX_ENV
          value: "prod"
        - name: DOCKER_BUILDKIT
          value: "1"
        - name: REGISTRY_HOST
          value: "ghcr.io/semaphoreio"
      jobs:
        - name: Build and push images
          matrix:
            - env_var: APPLICATION
              values:
                - "APIv1alpha"
                - "APIv2"
                - "ArtifactHub"
                - "Auth"
                - "Badge"
                - "BranchHub"
                - "Dashboardhub"
                - "Encryptor"
                - "Front"
                - "GithubNotifier"
                - "Gofer"
                - "Guard"
                - "PublicApiGateway"
                - "HooksProcessor"
                - "HooksReceiver"
                - "Keycloak image"
                - "Keycloak setup"
                - "Bootstrapper"
                - "PeriodicScheduler"
                - "Loghub2"
                - "GithubHooks"
                - "Notifications"
                - "Plumber"
                - "PreFlightChecks"
                - "ProjectHub"
                - "ProjectHub REST API"
                - "RBAC CE"
                - "Repohub"
                - "RepositoryHub"
                - "Scouter"
                - "SecretHub"
                - "Self Hosted Hub"
                - "Statsd"
                - "Velocity"
                - "Zebra"
          commands:
            - checkout
            - if git rev-parse --is-shallow-repository | grep -q true; then git fetch --unshallow --tags; else git fetch --tags; fi
            - export APP_NAME=$(jq -r --arg application "$APPLICATION" '.services[$application][]["app"]' .semaphore/services.json)
            - cd $(jq -r --arg application "$APPLICATION" '.services[$application][]["path"]' .semaphore/services.json)
            - |
              if docker manifest inspect $(make registry.image); then
                echo "Image $(make registry.image) already exists - skipping"
                export SEMAPHORE_JOB_RESULT=passed
                return 130
              fi
            - make build NO_BUILD_CACHE=true
            - 'if [[ -n $SEMAPHORE_GIT_TAG_NAME ]]; then make configure.sign; fi'
            - make registry.configure
            - make registry.push
            - 'if [[ -n $SEMAPHORE_GIT_TAG_NAME ]]; then make registry.sign; fi'

  - name: "Create Helm chart"
    task:
      jobs:
        - name: Create helm chart artifact
          commands:
            - checkout
            - if git rev-parse --is-shallow-repository | grep -q true; then git fetch --unshallow --tags; else git fetch --tags; fi
            - cd helm-chart
            - make helm.create
            - export CHART_PATH=$(find . -name *.tgz)
            - artifact push workflow $CHART_PATH --force
            - sem-context put chart_package_name=$(basename $CHART_PATH) --force

promotions:
  - name: Release
    pipeline_file: release.yml
    deployment_target: github-packages
  - name: Cloud Environment
    pipeline_file: env-create.yml
    deployment_target: provision-test-env
    parameters:
      env_vars:
        - name: CLOUD_TEST_ENV_PREFIX
          required: true
          options:
            - ahasanbasic
            - dbecirovic
            - dkolundzija
            - lpinheiro
            - master
            - mkutryj
            - pforesti
            - radwo
            - vmaksimovic
        - name: CLOUD_TEST_ENVIRONMENT_TYPE
          required: true
          options:
            - gke
            - single-vm
        - name: SEMAPHORE_EDITION
          required: true
          options:
            - ce
            - ee
          default_value: ce
          description: "The edition of Semaphore to install - Community (ce) or Enterprise (ee)."

