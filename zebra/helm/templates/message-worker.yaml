{{- if not .Values.global.development.minimalDeployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-message-worker
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}-message-worker"
  replicas: {{ .Values.messageWorker.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  template:
    metadata:
      name: {{ .Chart.Name }}-message-worker
      labels:
        app: {{ .Chart.Name }}-message-worker
        product: semaphoreci
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      automountServiceAccountToken: false
      volumes:
        - name: features-volume
          configMap:
            defaultMode: 0644
            name: features
            items:
            - key: features.yml
              path: features.yml
      initContainers:
{{ include "initContainers.all" . | indent 8 }}
      containers:
        - name: {{ .Chart.Name }}-message-worker
          image: "{{ .Values.global.image.registry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: features-volume
              mountPath: "/app/features.yml"
              readOnly: true
              subPath: features.yml
          envFrom:
            - configMapRef:
                name: {{ .Values.global.internalApi.configMapName }}
          env:
            {{- include "env.db.elixir" . | indent 12 }}
            - name: FEATURE_YAML_PATH
              value: "/app/features.yml"
            - name: ON_PREM
              value: "true"
            - name: START_JOB_STARTED_CALLBACK_WORKER
              value: "true"
            - name: START_JOB_FINISHED_CALLBACK_WORKER
              value: "true"
            - name: START_JOB_TEARDOWN_CALLBACK_WORKER
              value: "true"
            - name: START_GRPC_HEALTH_CHECK
              value: "true"
            - name: START_JOB_REQUEST_FACTORY
              value: "false"
            - name: START_SCHEDULER_WORKER
              value: "false"
            - name: START_TASK_FAIL_FAST_WORKER
              value: "false"
            - name: START_TASK_FINISHER_WORKER
              value: "false"
            - name: START_JOB_STOPPER
              value: "false"
            - name: START_JOB_TERMINATOR
              value: "false"
            - name: START_WAITING_JOB_TERMINATOR
              value: "false"
            - name: START_PUBLIC_JOB_API
              value: "false"
            - name: START_INTERNAL_JOB_API
              value: "false"
            - name: START_INTERNAL_TASK_API
              value: "false"
            - name: START_DISPATCHER_WORKER
              value: "false"
            - name: START_MONITOR
              value: "false"
            - name: MIX_ENV
              value: prod
            - name: BASE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.domain.configMapName }}
                  key: BASE_DOMAIN
            - name: POSTGRES_DB_SSL
              value: {{ .Values.global.database.ssl | quote }}
            - name: POSTGRES_DB_NAME
              value: {{ .Values.db.name | quote }}
            - name: POSTGRES_DB_POOL_SIZE
              value: {{ .Values.messageWorker.dbPoolSize | quote }}
            - name: AMQP_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.rabbitmq.secretName }}
                  key: amqp-url
{{- if .Values.global.statsd.enabled }}
            - name: METRICS_NAMESPACE
              value: {{ .Values.global.statsd.metricsNamespace }}
{{- end }}
          livenessProbe:
            grpc:
              port: 50051
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            grpc:
              port: 50051
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
{{- if .Values.messageWorker.resources }}
          resources:
{{ toYaml .Values.messageWorker.resources | indent 12 }}
{{- end }}
{{- if .Values.global.statsd.enabled }}
        - name: {{ .Chart.Name }}-statsd
          image: "{{ .Values.global.image.registry }}/{{ .Values.global.statsd.image }}:{{ .Values.global.statsd.imageTag }}"
          env:
            - name: FLUSH_INTERVAL
              value: "60000"
            - name: GRAPHITE_HOST
              value: {{ .Values.global.statsd.graphiteHost }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
{{- if .Values.statsd.resources }}
          resources:
{{ toYaml .Values.statsd.resources | indent 13 }}
{{- end }}
{{- end }}
{{- end }}
