version: v1.0  # Pipeline schema: https://docs.semaphoreci.com/reference/pipeline-yaml/
name: "🔥 Phoenix CI Pipeline"

# ---------------------------------------------------------------------------
# GLOBAL SETTINGS
# ---------------------------------------------------------------------------

agent:
  machine:
    type: {{ machine_type }}
    os_image: {{ os_image }}
  containers:  # Runtime & side‑service containers → https://docs.semaphoreci.com/reference/pipeline-yaml/#containers
    - name: main  # Primary job container (Elixir + Node)
      image: 'registry.semaphoreci.com/elixir:1.16'  # Image catalogue → https://docs.semaphoreci.com/using-semaphore/optimization/container-registry#convenience-and-language-images
    - name: postgres  # Postgres DB for tests
      image: 'registry.semaphoreci.com/postgres:17'
      env_vars:
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: phoenix_test

auto_cancel:
  queued:
    when: 'true'

fail_fast:
  cancel:
    when: branch != 'main'

global_job_config:
  env_vars:
    - name: MIX_ENV
      value: test
  prologue:
    commands:
      - checkout                      # Fetch repo at current commit
      - cache restore                 # Restore cached deps & _build

# ---------------------------------------------------------------------------
# BLOCKS
# ---------------------------------------------------------------------------

blocks:
  # ⚙️  Block 1: Install dependencies & compile – caches Hex/Rebar & JS assets
  - name: "⚙️ Install & Compile"
    task:
      jobs:
        - name: "⚙️ Install & Compile"
          commands:
            - mix local.hex --force
            - mix local.rebar --force
            - mix deps.get  # Fetch project dependencies
            - mix compile
            - npm install --prefix assets  # Install JS dependencies for Phoenix assets
            - cache store              # Cache deps & build artefacts

  # 🎨  Block 2: Build & digest front‑end assets
  - name: "🎨 Assets"
    dependencies: ["⚙️ Install & Compile"]
    task:
      jobs:
        - name: "🖌️ Compile Assets"
          commands:
            - npm run deploy --prefix assets  # Build production JS/CSS bundle
            - mix phx.digest                  # Generate digested asset fingerprints

  # 🔍  Block 3: Static analysis – format, Credo, Dialyzer
  - name: "🔍 Static Analysis"
    dependencies: ["⚙️ Install & Compile"]
    task:
      jobs:
        - name: "🖌️ Format Check"
          commands:
            - mix format --check-formatted
        - name: "🕵️ Credo Lint"
          commands:
            - mix credo --strict
        - name: "🧠 Dialyzer"
          commands:
            - mix dialyzer --halt-exit-status

  # 🛡️  Block 4: Security scans – dependency & code audits
  - name: "🛡️ Security"
    dependencies: ["⚙️ Install & Compile"]
    task:
      jobs:
        - name: "🛡️ Sobelow & Audits"
          commands:
            - mix deps.audit                 # Hex deps audit
            - mix sobelow --exit             # Phoenix-specific security scan
            - npm audit --audit-level=moderate --prefix assets

  # 🧪  Block 5: Tests (unit & integration) – depends only on security
  - name: "🧪 Tests"
    dependencies: ["🛡️ Security"]
    task:
      env_vars:
        - name: DATABASE_URL
          value: "postgres://postgres:postgres@postgres:5432/phoenix_test"  # Host "postgres" resolves to DB side‑container
      jobs:
        - name: "🧪 Unit Tests"
          commands:
            - mix deps.get  # Fetch project dependencies
            - mix test --exclude integration --cover --export-coverage unit \
                --formatter ExUnit.CLIFormatter \
                --formatter JUnitFormatter \
                --junit-report-file test_results/unit.xml
            - test-results gen-suite-report  # Publish per‑suite report → https://docs.semaphoreci.com/using-semaphore/tests/test-reports --name "Unit Tests" --format junit --path test_results/unit.xml

        - name: "🔬 Integration Tests"
          commands:
            - mix deps.get  # Fetch project dependencies
            - mix test --only integration --cover --export-coverage integration \
                --formatter ExUnit.CLIFormatter \
                --formatter JUnitFormatter \
                --junit-report-file test_results/integration.xml
            - test-results gen-suite-report  # Publish per‑suite report → https://docs.semaphoreci.com/using-semaphore/tests/test-reports --name "Integration Tests" --format junit --path test_results/integration.xml

# ---------------------------------------------------------------------------
# AFTER PIPELINE – coverage & reports
# ---------------------------------------------------------------------------

after_pipeline:
  task:
    secrets:
      - name: coveralls  # COVERALLS_REPO_TOKEN
    jobs:
      - name: "📤 Upload Coverage & Reports"
        commands:
          - mix coveralls.semaphore --exclude integration --import-cover cover  # Upload coverage → https://github.com/parroty/excoveralls
          - test-results gen-pipeline-report    # Aggregate & publish test reports → https://docs.semaphoreci.com/using-semaphore/tests/test-reports
