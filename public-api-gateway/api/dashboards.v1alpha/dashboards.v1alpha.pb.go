// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.17.3
// source: semaphore/dashboards.v1alpha.proto

package semaphore_dashboards_v1alpha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Dashboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Dashboard_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *Dashboard_Spec     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{0}
}

func (x *Dashboard) GetMetadata() *Dashboard_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Dashboard) GetSpec() *Dashboard_Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type ListDashboardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListDashboardsRequest) Reset() {
	*x = ListDashboardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDashboardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDashboardsRequest) ProtoMessage() {}

func (x *ListDashboardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDashboardsRequest.ProtoReflect.Descriptor instead.
func (*ListDashboardsRequest) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{1}
}

func (x *ListDashboardsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDashboardsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListDashboardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dashboards    []*Dashboard `protobuf:"bytes,1,rep,name=dashboards,proto3" json:"dashboards,omitempty"`
	NextPageToken string       `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize     int32        `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListDashboardsResponse) Reset() {
	*x = ListDashboardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDashboardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDashboardsResponse) ProtoMessage() {}

func (x *ListDashboardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDashboardsResponse.ProtoReflect.Descriptor instead.
func (*ListDashboardsResponse) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{2}
}

func (x *ListDashboardsResponse) GetDashboards() []*Dashboard {
	if x != nil {
		return x.Dashboards
	}
	return nil
}

func (x *ListDashboardsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListDashboardsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type GetDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdOrName string `protobuf:"bytes,1,opt,name=id_or_name,json=idOrName,proto3" json:"id_or_name,omitempty"`
}

func (x *GetDashboardRequest) Reset() {
	*x = GetDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardRequest) ProtoMessage() {}

func (x *GetDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardRequest) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{3}
}

func (x *GetDashboardRequest) GetIdOrName() string {
	if x != nil {
		return x.IdOrName
	}
	return ""
}

type UpdateDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdOrName  string     `protobuf:"bytes,1,opt,name=id_or_name,json=idOrName,proto3" json:"id_or_name,omitempty"`
	Dashboard *Dashboard `protobuf:"bytes,2,opt,name=dashboard,proto3" json:"dashboard,omitempty"`
}

func (x *UpdateDashboardRequest) Reset() {
	*x = UpdateDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDashboardRequest) ProtoMessage() {}

func (x *UpdateDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDashboardRequest.ProtoReflect.Descriptor instead.
func (*UpdateDashboardRequest) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDashboardRequest) GetIdOrName() string {
	if x != nil {
		return x.IdOrName
	}
	return ""
}

func (x *UpdateDashboardRequest) GetDashboard() *Dashboard {
	if x != nil {
		return x.Dashboard
	}
	return nil
}

type DeleteDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdOrName string `protobuf:"bytes,1,opt,name=id_or_name,json=idOrName,proto3" json:"id_or_name,omitempty"`
}

func (x *DeleteDashboardRequest) Reset() {
	*x = DeleteDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDashboardRequest) ProtoMessage() {}

func (x *DeleteDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDashboardRequest.ProtoReflect.Descriptor instead.
func (*DeleteDashboardRequest) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteDashboardRequest) GetIdOrName() string {
	if x != nil {
		return x.IdOrName
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{6}
}

type Dashboard_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	CreateTime int64  `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // unix timestamp of dashboard creation
	UpdateTime int64  `protobuf:"varint,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"` // unix timestamp of last update
}

func (x *Dashboard_Metadata) Reset() {
	*x = Dashboard_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard_Metadata) ProtoMessage() {}

func (x *Dashboard_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard_Metadata.ProtoReflect.Descriptor instead.
func (*Dashboard_Metadata) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Dashboard_Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dashboard_Metadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dashboard_Metadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Dashboard_Metadata) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Dashboard_Metadata) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type Dashboard_Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Widgets []*Dashboard_Spec_Widget `protobuf:"bytes,2,rep,name=widgets,proto3" json:"widgets,omitempty"`
}

func (x *Dashboard_Spec) Reset() {
	*x = Dashboard_Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard_Spec) ProtoMessage() {}

func (x *Dashboard_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard_Spec.ProtoReflect.Descriptor instead.
func (*Dashboard_Spec) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Dashboard_Spec) GetWidgets() []*Dashboard_Spec_Widget {
	if x != nil {
		return x.Widgets
	}
	return nil
}

type Dashboard_Spec_Widget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Filters map[string]string `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Dashboard_Spec_Widget) Reset() {
	*x = Dashboard_Spec_Widget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard_Spec_Widget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard_Spec_Widget) ProtoMessage() {}

func (x *Dashboard_Spec_Widget) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_dashboards_v1alpha_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard_Spec_Widget.ProtoReflect.Descriptor instead.
func (*Dashboard_Spec_Widget) Descriptor() ([]byte, []int) {
	return file_semaphore_dashboards_v1alpha_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Dashboard_Spec_Widget) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dashboard_Spec_Widget) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Dashboard_Spec_Widget) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

var File_semaphore_dashboards_v1alpha_proto protoreflect.FileDescriptor

var file_semaphore_dashboards_v1alpha_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x22, 0xc7, 0x04, 0x0a, 0x09, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73,
	0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x1a, 0x86, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xa0, 0x02, 0x0a, 0x04, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x4d, 0x0a, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x73, 0x1a, 0xc8, 0x01, 0x0a, 0x06, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72,
	0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x33, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x4f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x7d, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x69,
	0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x64, 0x4f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73,
	0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x09, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x22, 0x36, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x64,
	0x5f, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x64, 0x4f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x32, 0xbd, 0x04, 0x0a, 0x0d, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x41, 0x70, 0x69, 0x12, 0x7b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x33, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72,
	0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x73, 0x65, 0x6d,
	0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x31, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x63, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x27, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70,
	0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x70, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x34, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x6d,
	0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x6c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x34, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f,
	0x72, 0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73,
	0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x33, 0x5a, 0x31, 0x2e, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68,
	0x6f, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_semaphore_dashboards_v1alpha_proto_rawDescOnce sync.Once
	file_semaphore_dashboards_v1alpha_proto_rawDescData = file_semaphore_dashboards_v1alpha_proto_rawDesc
)

func file_semaphore_dashboards_v1alpha_proto_rawDescGZIP() []byte {
	file_semaphore_dashboards_v1alpha_proto_rawDescOnce.Do(func() {
		file_semaphore_dashboards_v1alpha_proto_rawDescData = protoimpl.X.CompressGZIP(file_semaphore_dashboards_v1alpha_proto_rawDescData)
	})
	return file_semaphore_dashboards_v1alpha_proto_rawDescData
}

var file_semaphore_dashboards_v1alpha_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_semaphore_dashboards_v1alpha_proto_goTypes = []any{
	(*Dashboard)(nil),              // 0: semaphore.dashboards.v1alpha.Dashboard
	(*ListDashboardsRequest)(nil),  // 1: semaphore.dashboards.v1alpha.ListDashboardsRequest
	(*ListDashboardsResponse)(nil), // 2: semaphore.dashboards.v1alpha.ListDashboardsResponse
	(*GetDashboardRequest)(nil),    // 3: semaphore.dashboards.v1alpha.GetDashboardRequest
	(*UpdateDashboardRequest)(nil), // 4: semaphore.dashboards.v1alpha.UpdateDashboardRequest
	(*DeleteDashboardRequest)(nil), // 5: semaphore.dashboards.v1alpha.DeleteDashboardRequest
	(*Empty)(nil),                  // 6: semaphore.dashboards.v1alpha.Empty
	(*Dashboard_Metadata)(nil),     // 7: semaphore.dashboards.v1alpha.Dashboard.Metadata
	(*Dashboard_Spec)(nil),         // 8: semaphore.dashboards.v1alpha.Dashboard.Spec
	(*Dashboard_Spec_Widget)(nil),  // 9: semaphore.dashboards.v1alpha.Dashboard.Spec.Widget
	nil,                            // 10: semaphore.dashboards.v1alpha.Dashboard.Spec.Widget.FiltersEntry
}
var file_semaphore_dashboards_v1alpha_proto_depIdxs = []int32{
	7,  // 0: semaphore.dashboards.v1alpha.Dashboard.metadata:type_name -> semaphore.dashboards.v1alpha.Dashboard.Metadata
	8,  // 1: semaphore.dashboards.v1alpha.Dashboard.spec:type_name -> semaphore.dashboards.v1alpha.Dashboard.Spec
	0,  // 2: semaphore.dashboards.v1alpha.ListDashboardsResponse.dashboards:type_name -> semaphore.dashboards.v1alpha.Dashboard
	0,  // 3: semaphore.dashboards.v1alpha.UpdateDashboardRequest.dashboard:type_name -> semaphore.dashboards.v1alpha.Dashboard
	9,  // 4: semaphore.dashboards.v1alpha.Dashboard.Spec.widgets:type_name -> semaphore.dashboards.v1alpha.Dashboard.Spec.Widget
	10, // 5: semaphore.dashboards.v1alpha.Dashboard.Spec.Widget.filters:type_name -> semaphore.dashboards.v1alpha.Dashboard.Spec.Widget.FiltersEntry
	1,  // 6: semaphore.dashboards.v1alpha.DashboardsApi.ListDashboards:input_type -> semaphore.dashboards.v1alpha.ListDashboardsRequest
	3,  // 7: semaphore.dashboards.v1alpha.DashboardsApi.GetDashboard:input_type -> semaphore.dashboards.v1alpha.GetDashboardRequest
	0,  // 8: semaphore.dashboards.v1alpha.DashboardsApi.CreateDashboard:input_type -> semaphore.dashboards.v1alpha.Dashboard
	4,  // 9: semaphore.dashboards.v1alpha.DashboardsApi.UpdateDashboard:input_type -> semaphore.dashboards.v1alpha.UpdateDashboardRequest
	5,  // 10: semaphore.dashboards.v1alpha.DashboardsApi.DeleteDashboard:input_type -> semaphore.dashboards.v1alpha.DeleteDashboardRequest
	2,  // 11: semaphore.dashboards.v1alpha.DashboardsApi.ListDashboards:output_type -> semaphore.dashboards.v1alpha.ListDashboardsResponse
	0,  // 12: semaphore.dashboards.v1alpha.DashboardsApi.GetDashboard:output_type -> semaphore.dashboards.v1alpha.Dashboard
	0,  // 13: semaphore.dashboards.v1alpha.DashboardsApi.CreateDashboard:output_type -> semaphore.dashboards.v1alpha.Dashboard
	0,  // 14: semaphore.dashboards.v1alpha.DashboardsApi.UpdateDashboard:output_type -> semaphore.dashboards.v1alpha.Dashboard
	6,  // 15: semaphore.dashboards.v1alpha.DashboardsApi.DeleteDashboard:output_type -> semaphore.dashboards.v1alpha.Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_semaphore_dashboards_v1alpha_proto_init() }
func file_semaphore_dashboards_v1alpha_proto_init() {
	if File_semaphore_dashboards_v1alpha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_semaphore_dashboards_v1alpha_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Dashboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListDashboardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListDashboardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Dashboard_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Dashboard_Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_dashboards_v1alpha_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Dashboard_Spec_Widget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_semaphore_dashboards_v1alpha_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_semaphore_dashboards_v1alpha_proto_goTypes,
		DependencyIndexes: file_semaphore_dashboards_v1alpha_proto_depIdxs,
		MessageInfos:      file_semaphore_dashboards_v1alpha_proto_msgTypes,
	}.Build()
	File_semaphore_dashboards_v1alpha_proto = out.File
	file_semaphore_dashboards_v1alpha_proto_rawDesc = nil
	file_semaphore_dashboards_v1alpha_proto_goTypes = nil
	file_semaphore_dashboards_v1alpha_proto_depIdxs = nil
}
