// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.17.3
// source: semaphore/secrets.v1beta.proto

package semaphore_secrets_v1beta

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Secret_OrgConfig_ProjectsAccess int32

const (
	Secret_OrgConfig_ALL     Secret_OrgConfig_ProjectsAccess = 0
	Secret_OrgConfig_ALLOWED Secret_OrgConfig_ProjectsAccess = 1
	Secret_OrgConfig_NONE    Secret_OrgConfig_ProjectsAccess = 2
)

// Enum value maps for Secret_OrgConfig_ProjectsAccess.
var (
	Secret_OrgConfig_ProjectsAccess_name = map[int32]string{
		0: "ALL",
		1: "ALLOWED",
		2: "NONE",
	}
	Secret_OrgConfig_ProjectsAccess_value = map[string]int32{
		"ALL":     0,
		"ALLOWED": 1,
		"NONE":    2,
	}
)

func (x Secret_OrgConfig_ProjectsAccess) Enum() *Secret_OrgConfig_ProjectsAccess {
	p := new(Secret_OrgConfig_ProjectsAccess)
	*p = x
	return p
}

func (x Secret_OrgConfig_ProjectsAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secret_OrgConfig_ProjectsAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_semaphore_secrets_v1beta_proto_enumTypes[0].Descriptor()
}

func (Secret_OrgConfig_ProjectsAccess) Type() protoreflect.EnumType {
	return &file_semaphore_secrets_v1beta_proto_enumTypes[0]
}

func (x Secret_OrgConfig_ProjectsAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secret_OrgConfig_ProjectsAccess.Descriptor instead.
func (Secret_OrgConfig_ProjectsAccess) EnumDescriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0, 4, 0}
}

type Secret_OrgConfig_JobAttachAccess int32

const (
	Secret_OrgConfig_JOB_ATTACH_YES Secret_OrgConfig_JobAttachAccess = 0
	Secret_OrgConfig_JOB_ATTACH_NO  Secret_OrgConfig_JobAttachAccess = 2
)

// Enum value maps for Secret_OrgConfig_JobAttachAccess.
var (
	Secret_OrgConfig_JobAttachAccess_name = map[int32]string{
		0: "JOB_ATTACH_YES",
		2: "JOB_ATTACH_NO",
	}
	Secret_OrgConfig_JobAttachAccess_value = map[string]int32{
		"JOB_ATTACH_YES": 0,
		"JOB_ATTACH_NO":  2,
	}
)

func (x Secret_OrgConfig_JobAttachAccess) Enum() *Secret_OrgConfig_JobAttachAccess {
	p := new(Secret_OrgConfig_JobAttachAccess)
	*p = x
	return p
}

func (x Secret_OrgConfig_JobAttachAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secret_OrgConfig_JobAttachAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_semaphore_secrets_v1beta_proto_enumTypes[1].Descriptor()
}

func (Secret_OrgConfig_JobAttachAccess) Type() protoreflect.EnumType {
	return &file_semaphore_secrets_v1beta_proto_enumTypes[1]
}

func (x Secret_OrgConfig_JobAttachAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secret_OrgConfig_JobAttachAccess.Descriptor instead.
func (Secret_OrgConfig_JobAttachAccess) EnumDescriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0, 4, 1}
}

type Secret_OrgConfig_JobDebugAccess int32

const (
	Secret_OrgConfig_JOB_DEBUG_YES Secret_OrgConfig_JobDebugAccess = 0
	Secret_OrgConfig_JOB_DEBUG_NO  Secret_OrgConfig_JobDebugAccess = 2
)

// Enum value maps for Secret_OrgConfig_JobDebugAccess.
var (
	Secret_OrgConfig_JobDebugAccess_name = map[int32]string{
		0: "JOB_DEBUG_YES",
		2: "JOB_DEBUG_NO",
	}
	Secret_OrgConfig_JobDebugAccess_value = map[string]int32{
		"JOB_DEBUG_YES": 0,
		"JOB_DEBUG_NO":  2,
	}
)

func (x Secret_OrgConfig_JobDebugAccess) Enum() *Secret_OrgConfig_JobDebugAccess {
	p := new(Secret_OrgConfig_JobDebugAccess)
	*p = x
	return p
}

func (x Secret_OrgConfig_JobDebugAccess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Secret_OrgConfig_JobDebugAccess) Descriptor() protoreflect.EnumDescriptor {
	return file_semaphore_secrets_v1beta_proto_enumTypes[2].Descriptor()
}

func (Secret_OrgConfig_JobDebugAccess) Type() protoreflect.EnumType {
	return &file_semaphore_secrets_v1beta_proto_enumTypes[2]
}

func (x Secret_OrgConfig_JobDebugAccess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Secret_OrgConfig_JobDebugAccess.Descriptor instead.
func (Secret_OrgConfig_JobDebugAccess) EnumDescriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0, 4, 2}
}

type ListSecretsRequest_Order int32

const (
	ListSecretsRequest_BY_NAME_ASC        ListSecretsRequest_Order = 0
	ListSecretsRequest_BY_CREATE_TIME_ASC ListSecretsRequest_Order = 1
)

// Enum value maps for ListSecretsRequest_Order.
var (
	ListSecretsRequest_Order_name = map[int32]string{
		0: "BY_NAME_ASC",
		1: "BY_CREATE_TIME_ASC",
	}
	ListSecretsRequest_Order_value = map[string]int32{
		"BY_NAME_ASC":        0,
		"BY_CREATE_TIME_ASC": 1,
	}
)

func (x ListSecretsRequest_Order) Enum() *ListSecretsRequest_Order {
	p := new(ListSecretsRequest_Order)
	*p = x
	return p
}

func (x ListSecretsRequest_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListSecretsRequest_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_semaphore_secrets_v1beta_proto_enumTypes[3].Descriptor()
}

func (ListSecretsRequest_Order) Type() protoreflect.EnumType {
	return &file_semaphore_secrets_v1beta_proto_enumTypes[3]
}

func (x ListSecretsRequest_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListSecretsRequest_Order.Descriptor instead.
func (ListSecretsRequest_Order) EnumDescriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{1, 0}
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *Secret_Metadata  `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Data      *Secret_Data      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	OrgConfig *Secret_OrgConfig `protobuf:"bytes,3,opt,name=org_config,json=orgConfig,proto3" json:"org_config,omitempty"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetMetadata() *Secret_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Secret) GetData() *Secret_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Secret) GetOrgConfig() *Secret_OrgConfig {
	if x != nil {
		return x.OrgConfig
	}
	return nil
}

type ListSecretsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32                    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string                   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Order     ListSecretsRequest_Order `protobuf:"varint,3,opt,name=order,proto3,enum=semaphore.secrets.v1beta.ListSecretsRequest_Order" json:"order,omitempty"`
}

func (x *ListSecretsRequest) Reset() {
	*x = ListSecretsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecretsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretsRequest) ProtoMessage() {}

func (x *ListSecretsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretsRequest.ProtoReflect.Descriptor instead.
func (*ListSecretsRequest) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{1}
}

func (x *ListSecretsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSecretsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListSecretsRequest) GetOrder() ListSecretsRequest_Order {
	if x != nil {
		return x.Order
	}
	return ListSecretsRequest_BY_NAME_ASC
}

type ListSecretsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secrets       []*Secret `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
	NextPageToken string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSecretsResponse) Reset() {
	*x = ListSecretsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecretsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretsResponse) ProtoMessage() {}

func (x *ListSecretsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretsResponse.ProtoReflect.Descriptor instead.
func (*ListSecretsResponse) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{2}
}

func (x *ListSecretsResponse) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *ListSecretsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretIdOrName string `protobuf:"bytes,1,opt,name=secret_id_or_name,json=secretIdOrName,proto3" json:"secret_id_or_name,omitempty"`
}

func (x *GetSecretRequest) Reset() {
	*x = GetSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretRequest) ProtoMessage() {}

func (x *GetSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretRequest.ProtoReflect.Descriptor instead.
func (*GetSecretRequest) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{3}
}

func (x *GetSecretRequest) GetSecretIdOrName() string {
	if x != nil {
		return x.SecretIdOrName
	}
	return ""
}

type UpdateSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretIdOrName string  `protobuf:"bytes,1,opt,name=secret_id_or_name,json=secretIdOrName,proto3" json:"secret_id_or_name,omitempty"`
	Secret         *Secret `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *UpdateSecretRequest) Reset() {
	*x = UpdateSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecretRequest) ProtoMessage() {}

func (x *UpdateSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecretRequest.ProtoReflect.Descriptor instead.
func (*UpdateSecretRequest) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSecretRequest) GetSecretIdOrName() string {
	if x != nil {
		return x.SecretIdOrName
	}
	return ""
}

func (x *UpdateSecretRequest) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type DeleteSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretIdOrName string `protobuf:"bytes,1,opt,name=secret_id_or_name,json=secretIdOrName,proto3" json:"secret_id_or_name,omitempty"`
}

func (x *DeleteSecretRequest) Reset() {
	*x = DeleteSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecretRequest) ProtoMessage() {}

func (x *DeleteSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecretRequest.ProtoReflect.Descriptor instead.
func (*DeleteSecretRequest) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSecretRequest) GetSecretIdOrName() string {
	if x != nil {
		return x.SecretIdOrName
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{6}
}

type Secret_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id              string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime      int64  `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                // unix timestamp of secret creation
	UpdateTime      int64  `protobuf:"varint,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`                // unix timestamp of last update
	CheckoutAt      int64  `protobuf:"varint,5,opt,name=checkout_at,json=checkoutAt,proto3" json:"checkout_at,omitempty"`                // unix timestamp of last checkout (usage of secret)
	ContentIncluded bool   `protobuf:"varint,6,opt,name=content_included,json=contentIncluded,proto3" json:"content_included,omitempty"` // if true, content is included in the response
}

func (x *Secret_Metadata) Reset() {
	*x = Secret_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret_Metadata) ProtoMessage() {}

func (x *Secret_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret_Metadata.ProtoReflect.Descriptor instead.
func (*Secret_Metadata) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Secret_Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret_Metadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Secret_Metadata) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Secret_Metadata) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *Secret_Metadata) GetCheckoutAt() int64 {
	if x != nil {
		return x.CheckoutAt
	}
	return 0
}

func (x *Secret_Metadata) GetContentIncluded() bool {
	if x != nil {
		return x.ContentIncluded
	}
	return false
}

type Secret_EnvVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Secret_EnvVar) Reset() {
	*x = Secret_EnvVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret_EnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret_EnvVar) ProtoMessage() {}

func (x *Secret_EnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret_EnvVar.ProtoReflect.Descriptor instead.
func (*Secret_EnvVar) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Secret_EnvVar) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret_EnvVar) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Secret_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Secret_File) Reset() {
	*x = Secret_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret_File) ProtoMessage() {}

func (x *Secret_File) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret_File.ProtoReflect.Descriptor instead.
func (*Secret_File) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Secret_File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Secret_File) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type Secret_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvVars []*Secret_EnvVar `protobuf:"bytes,1,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
	Files   []*Secret_File   `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *Secret_Data) Reset() {
	*x = Secret_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret_Data) ProtoMessage() {}

func (x *Secret_Data) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret_Data.ProtoReflect.Descriptor instead.
func (*Secret_Data) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Secret_Data) GetEnvVars() []*Secret_EnvVar {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *Secret_Data) GetFiles() []*Secret_File {
	if x != nil {
		return x.Files
	}
	return nil
}

type Secret_OrgConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectsAccess Secret_OrgConfig_ProjectsAccess  `protobuf:"varint,1,opt,name=projects_access,json=projectsAccess,proto3,enum=semaphore.secrets.v1beta.Secret_OrgConfig_ProjectsAccess" json:"projects_access,omitempty"`
	ProjectIds     []string                         `protobuf:"bytes,2,rep,name=project_ids,json=projectIds,proto3" json:"project_ids,omitempty"`
	DebugAccess    Secret_OrgConfig_JobDebugAccess  `protobuf:"varint,3,opt,name=debug_access,json=debugAccess,proto3,enum=semaphore.secrets.v1beta.Secret_OrgConfig_JobDebugAccess" json:"debug_access,omitempty"`
	AttachAccess   Secret_OrgConfig_JobAttachAccess `protobuf:"varint,4,opt,name=attach_access,json=attachAccess,proto3,enum=semaphore.secrets.v1beta.Secret_OrgConfig_JobAttachAccess" json:"attach_access,omitempty"`
}

func (x *Secret_OrgConfig) Reset() {
	*x = Secret_OrgConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_semaphore_secrets_v1beta_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret_OrgConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret_OrgConfig) ProtoMessage() {}

func (x *Secret_OrgConfig) ProtoReflect() protoreflect.Message {
	mi := &file_semaphore_secrets_v1beta_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret_OrgConfig.ProtoReflect.Descriptor instead.
func (*Secret_OrgConfig) Descriptor() ([]byte, []int) {
	return file_semaphore_secrets_v1beta_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Secret_OrgConfig) GetProjectsAccess() Secret_OrgConfig_ProjectsAccess {
	if x != nil {
		return x.ProjectsAccess
	}
	return Secret_OrgConfig_ALL
}

func (x *Secret_OrgConfig) GetProjectIds() []string {
	if x != nil {
		return x.ProjectIds
	}
	return nil
}

func (x *Secret_OrgConfig) GetDebugAccess() Secret_OrgConfig_JobDebugAccess {
	if x != nil {
		return x.DebugAccess
	}
	return Secret_OrgConfig_JOB_DEBUG_YES
}

func (x *Secret_OrgConfig) GetAttachAccess() Secret_OrgConfig_JobAttachAccess {
	if x != nil {
		return x.AttachAccess
	}
	return Secret_OrgConfig_JOB_ATTACH_YES
}

var File_semaphore_secrets_v1beta_proto protoreflect.FileDescriptor

var file_semaphore_secrets_v1beta_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x18, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x22, 0xfd, 0x08, 0x0a, 0x06, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68,
	0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x6d,
	0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x0a, 0x6f, 0x72, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65,
	0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x4f, 0x72,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0xbc, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x1a, 0x32, 0x0a, 0x06, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x34, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x87, 0x01, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f,
	0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x52,
	0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68,
	0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0xf2, 0x03, 0x0a, 0x09, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x62, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x73,
	0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x4f,
	0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x5c, 0x0a, 0x0c, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39,
	0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x2e, 0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4a, 0x6f, 0x62, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x5f, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e,
	0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e,
	0x4f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4a, 0x6f, 0x62, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x22, 0x38, 0x0a, 0x0f, 0x4a, 0x6f, 0x62,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x0e,
	0x4a, 0x4f, 0x42, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x4f, 0x42, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x5f, 0x4e,
	0x4f, 0x10, 0x02, 0x22, 0x35, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x4a, 0x4f, 0x42, 0x5f, 0x44, 0x45, 0x42,
	0x55, 0x47, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x42, 0x5f,
	0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x4e, 0x4f, 0x10, 0x02, 0x22, 0xcc, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x48, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x73,
	0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x79, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x4f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x4f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72,
	0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0x40, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x64, 0x4f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xe8, 0x03, 0x0a, 0x0a, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x41, 0x70, 0x69, 0x12, 0x6a, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70,
	0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f,
	0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x2a, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x52, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x20, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x5f, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65,
	0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2e,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x5e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72,
	0x65, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65,
	0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2b, 0x5a, 0x29, 0x2e, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x3b, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x5f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_semaphore_secrets_v1beta_proto_rawDescOnce sync.Once
	file_semaphore_secrets_v1beta_proto_rawDescData = file_semaphore_secrets_v1beta_proto_rawDesc
)

func file_semaphore_secrets_v1beta_proto_rawDescGZIP() []byte {
	file_semaphore_secrets_v1beta_proto_rawDescOnce.Do(func() {
		file_semaphore_secrets_v1beta_proto_rawDescData = protoimpl.X.CompressGZIP(file_semaphore_secrets_v1beta_proto_rawDescData)
	})
	return file_semaphore_secrets_v1beta_proto_rawDescData
}

var file_semaphore_secrets_v1beta_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_semaphore_secrets_v1beta_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_semaphore_secrets_v1beta_proto_goTypes = []any{
	(Secret_OrgConfig_ProjectsAccess)(0),  // 0: semaphore.secrets.v1beta.Secret.OrgConfig.ProjectsAccess
	(Secret_OrgConfig_JobAttachAccess)(0), // 1: semaphore.secrets.v1beta.Secret.OrgConfig.JobAttachAccess
	(Secret_OrgConfig_JobDebugAccess)(0),  // 2: semaphore.secrets.v1beta.Secret.OrgConfig.JobDebugAccess
	(ListSecretsRequest_Order)(0),         // 3: semaphore.secrets.v1beta.ListSecretsRequest.Order
	(*Secret)(nil),                        // 4: semaphore.secrets.v1beta.Secret
	(*ListSecretsRequest)(nil),            // 5: semaphore.secrets.v1beta.ListSecretsRequest
	(*ListSecretsResponse)(nil),           // 6: semaphore.secrets.v1beta.ListSecretsResponse
	(*GetSecretRequest)(nil),              // 7: semaphore.secrets.v1beta.GetSecretRequest
	(*UpdateSecretRequest)(nil),           // 8: semaphore.secrets.v1beta.UpdateSecretRequest
	(*DeleteSecretRequest)(nil),           // 9: semaphore.secrets.v1beta.DeleteSecretRequest
	(*Empty)(nil),                         // 10: semaphore.secrets.v1beta.Empty
	(*Secret_Metadata)(nil),               // 11: semaphore.secrets.v1beta.Secret.Metadata
	(*Secret_EnvVar)(nil),                 // 12: semaphore.secrets.v1beta.Secret.EnvVar
	(*Secret_File)(nil),                   // 13: semaphore.secrets.v1beta.Secret.File
	(*Secret_Data)(nil),                   // 14: semaphore.secrets.v1beta.Secret.Data
	(*Secret_OrgConfig)(nil),              // 15: semaphore.secrets.v1beta.Secret.OrgConfig
}
var file_semaphore_secrets_v1beta_proto_depIdxs = []int32{
	11, // 0: semaphore.secrets.v1beta.Secret.metadata:type_name -> semaphore.secrets.v1beta.Secret.Metadata
	14, // 1: semaphore.secrets.v1beta.Secret.data:type_name -> semaphore.secrets.v1beta.Secret.Data
	15, // 2: semaphore.secrets.v1beta.Secret.org_config:type_name -> semaphore.secrets.v1beta.Secret.OrgConfig
	3,  // 3: semaphore.secrets.v1beta.ListSecretsRequest.order:type_name -> semaphore.secrets.v1beta.ListSecretsRequest.Order
	4,  // 4: semaphore.secrets.v1beta.ListSecretsResponse.secrets:type_name -> semaphore.secrets.v1beta.Secret
	4,  // 5: semaphore.secrets.v1beta.UpdateSecretRequest.secret:type_name -> semaphore.secrets.v1beta.Secret
	12, // 6: semaphore.secrets.v1beta.Secret.Data.env_vars:type_name -> semaphore.secrets.v1beta.Secret.EnvVar
	13, // 7: semaphore.secrets.v1beta.Secret.Data.files:type_name -> semaphore.secrets.v1beta.Secret.File
	0,  // 8: semaphore.secrets.v1beta.Secret.OrgConfig.projects_access:type_name -> semaphore.secrets.v1beta.Secret.OrgConfig.ProjectsAccess
	2,  // 9: semaphore.secrets.v1beta.Secret.OrgConfig.debug_access:type_name -> semaphore.secrets.v1beta.Secret.OrgConfig.JobDebugAccess
	1,  // 10: semaphore.secrets.v1beta.Secret.OrgConfig.attach_access:type_name -> semaphore.secrets.v1beta.Secret.OrgConfig.JobAttachAccess
	5,  // 11: semaphore.secrets.v1beta.SecretsApi.ListSecrets:input_type -> semaphore.secrets.v1beta.ListSecretsRequest
	7,  // 12: semaphore.secrets.v1beta.SecretsApi.GetSecret:input_type -> semaphore.secrets.v1beta.GetSecretRequest
	4,  // 13: semaphore.secrets.v1beta.SecretsApi.CreateSecret:input_type -> semaphore.secrets.v1beta.Secret
	8,  // 14: semaphore.secrets.v1beta.SecretsApi.UpdateSecret:input_type -> semaphore.secrets.v1beta.UpdateSecretRequest
	9,  // 15: semaphore.secrets.v1beta.SecretsApi.DeleteSecret:input_type -> semaphore.secrets.v1beta.DeleteSecretRequest
	6,  // 16: semaphore.secrets.v1beta.SecretsApi.ListSecrets:output_type -> semaphore.secrets.v1beta.ListSecretsResponse
	4,  // 17: semaphore.secrets.v1beta.SecretsApi.GetSecret:output_type -> semaphore.secrets.v1beta.Secret
	4,  // 18: semaphore.secrets.v1beta.SecretsApi.CreateSecret:output_type -> semaphore.secrets.v1beta.Secret
	4,  // 19: semaphore.secrets.v1beta.SecretsApi.UpdateSecret:output_type -> semaphore.secrets.v1beta.Secret
	10, // 20: semaphore.secrets.v1beta.SecretsApi.DeleteSecret:output_type -> semaphore.secrets.v1beta.Empty
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_semaphore_secrets_v1beta_proto_init() }
func file_semaphore_secrets_v1beta_proto_init() {
	if File_semaphore_secrets_v1beta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_semaphore_secrets_v1beta_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListSecretsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListSecretsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Secret_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Secret_EnvVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Secret_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Secret_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_semaphore_secrets_v1beta_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Secret_OrgConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_semaphore_secrets_v1beta_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_semaphore_secrets_v1beta_proto_goTypes,
		DependencyIndexes: file_semaphore_secrets_v1beta_proto_depIdxs,
		EnumInfos:         file_semaphore_secrets_v1beta_proto_enumTypes,
		MessageInfos:      file_semaphore_secrets_v1beta_proto_msgTypes,
	}.Build()
	File_semaphore_secrets_v1beta_proto = out.File
	file_semaphore_secrets_v1beta_proto_rawDesc = nil
	file_semaphore_secrets_v1beta_proto_goTypes = nil
	file_semaphore_secrets_v1beta_proto_depIdxs = nil
}
