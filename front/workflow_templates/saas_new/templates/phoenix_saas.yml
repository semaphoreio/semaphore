version: v1.0  # Pipeline schema: https://docs.semaphoreci.com/reference/pipeline-yaml/
name: "🔥 Phoenix CI Pipeline"

# ---------------------------------------------------------------------------
# GLOBAL SETTINGS
# ---------------------------------------------------------------------------

agent:  # Choose machine type & image in the UI → https://docs.semaphoreci.com/reference/machine-types/
  machine:
    type: {{ machine_type }}
    os_image: {{ os_image }}

auto_cancel:  # Skip queued runs on a newer commit → https://docs.semaphoreci.com/reference/pipeline-yaml/#auto-cancel
  queued:
    when: 'true'

fail_fast:  # Abort running jobs early on failure (esp. non-main branches) → https://docs.semaphoreci.com/reference/pipeline-yaml/#fail-fast
  cancel:
    when: branch != 'main'

global_job_config:  # Settings applied to every job → https://docs.semaphoreci.com/reference/pipeline-yaml/#global-job-config
  prologue:
    commands:
      - checkout                           # Always fetch repo at current commit
      - cache restore                      # Restore cached _build, deps & node_modules → https://docs.semaphoreci.com/reference/toolbox/#cache
  env_vars:
    - name: MIX_ENV
      value: test

# ---------------------------------------------------------------------------
# BLOCKS
# ---------------------------------------------------------------------------

blocks:
  # ⚙️  Block 1: Install dependencies & compile – caches Hex/Rebar & JS assets
  - name: "⚙️ Install & Compile"
    dependencies: []
    task:
      jobs:
        - name: "⚙️ Install & Compile"
          commands:
            - sem-version elixir 1.14.4      # Pin Elixir runtime → https://docs.semaphoreci.com/reference/toolbox/#sem-version
            - sem-version node 18.16.0       # Pin Node.js LTS → https://docs.semaphoreci.com/reference/toolbox/#sem-version
            - mix local.hex --force
            - mix local.rebar --force
            - mix deps.get
            - mix compile
            - npm install --prefix assets
            - cache store                    # Save deps & assets for later blocks → https://docs.semaphoreci.com/reference/toolbox/#cache

  # 🎨  Block 2: Build & digest front‑end assets (runs after compile)
  - name: "🎨 Assets"
    dependencies:
      - "⚙️ Install & Compile"
    task:
      jobs:
        - name: "🖌️ Compile Assets"
          commands:
            - npm run deploy --prefix assets   # Build production JS/CSS bundle
            - mix phx.digest                  # Generate digested asset fingerprints

  # 🔍  Block 3: Static analysis – format, Credo, Dialyzer
  - name: "🔍 Static Analysis"
    dependencies:
      - "⚙️ Install & Compile"
    task:
      jobs:
        - name: "🖌️ Format Check"
          commands:
            - mix format --check-formatted
        - name: "🕵️ Credo Lint"
          commands:
            - mix credo --strict
        - name: "🧠 Dialyzer"
          commands:
            - mix dialyzer --halt-exit-status

  # 🛡️  Block 4: Security checks – dependency & code audits
  - name: "🛡️ Security"
    dependencies:
      - "⚙️ Install & Compile"
    task:
      jobs:
        - name: "🛡️ Sobelow & Audits"
          commands:
            - mix deps.audit                 # Check Hex deps for known vulns → https://hexdocs.pm/mix_audit
            - mix sobelow --exit             # Phoenix-specific security scan → https://sobelow.dev
            - npm audit --audit-level=moderate --prefix assets  # JS dependency audit

  # 🧪  Block 5: Tests (unit + integration) – depends only on security
  - name: "🧪 Tests"
    dependencies:
      - "🛡️ Security"
    task:
      env_vars:
        - name: DATABASE_URL
          value: "postgres://postgres:postgres@localhost/phoenix_test"
      jobs:
        - name: "🧪 Unit Tests"
          commands:
            - sem-service start postgres       # Start Postgres service → https://docs.semaphoreci.com/reference/toolbox/#sem-service
            - mix deps.get
            # Produce JUnit XML report (needs junit_formatter in deps)
            - mix test --exclude integration --cover --export-coverage unit \
                --formatter ExUnit.CLIFormatter \
                --formatter JUnitFormatter \
                --junit-report-file test_results/unit.xml
            # Publish per‑suite report → https://docs.semaphoreci.com/using-semaphore/tests/test-reports
            - test-results gen-suite-report \
                --name "Unit Tests" \
                --format junit \
                --path test_results/unit.xml

        - name: "🔬 Integration Tests"
          commands:
            - sem-service start postgres
            - mix deps.get
            - mix test --only integration --cover --export-coverage integration \
                --formatter ExUnit.CLIFormatter \
                --formatter JUnitFormatter \
                --junit-report-file test_results/integration.xml
            - test-results gen-suite-report \
                --name "Integration Tests" \
                --format junit \
                --path test_results/integration.xml

# ---------------------------------------------------------------------------
# AFTER PIPELINE: aggregate coverage & suite reports
# ---------------------------------------------------------------------------

after_pipeline:  # Runs after all blocks finish → https://docs.semaphoreci.com/reference/pipeline-yaml/#after_pipeline
  task:
    env_vars:
    secrets:
      - name: coveralls                    # COVERALLS_REPO_TOKEN secret → https://docs.semaphoreci.com/reference/secrets/
    jobs:
      - name: "📤 Upload Coverage & Reports"
        commands:
          - mix coveralls.semaphore --exclude integration --import-cover cover  # Upload coverage → https://github.com/parroty/excoveralls
          - test-results gen-pipeline-report    # Aggregate & publish test reports → https://docs.semaphoreci.com/using-semaphore/tests/test-reports
