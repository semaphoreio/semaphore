{{- if not .Values.global.development.minimalDeployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-archivator
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-archivator
  replicas: {{ .Values.archivator.replicas }}
  template:
    metadata:
      name: {{ .Chart.Name }}-archivator
      labels:
        app: {{ .Chart.Name }}-archivator
        product: semaphoreci
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      automountServiceAccountToken: false
      initContainers:
{{ include "initContainers.waitForRabbitMQ" . | indent 8 }}
      containers:
        - name: {{ .Chart.Name }}-archivator
          image: "{{ .Values.global.image.registry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          envFrom:
            - secretRef:
                name: {{ .Values.global.logs.secretName }}
          env:
            - name: START_ARCHIVATOR
              value: "yes"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.redis.secretName }}
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.redis.secretName }}
                  key: port
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.redis.secretName }}
                  key: username
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.redis.secretName }}
                  key: password
            - name: RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.rabbitmq.secretName }}
                  key: amqp-url

{{- if .Values.global.statsd.enabled }}
            - name: METRICS_NAMESPACE
              value: {{ .Values.global.statsd.metricsNamespace }}
{{- end }}

{{- if .Values.archivator.resources }}
          resources:
{{ toYaml .Values.archivator.resources | indent 13 }}
{{- end }}
{{- if .Values.global.statsd.enabled }}
        - name: {{ .Chart.Name }}-statsd
          image: "{{ .Values.global.image.registry }}/{{ .Values.global.statsd.image }}:{{ .Values.global.statsd.imageTag }}"
          env:
            - name: FLUSH_INTERVAL
              value: "60000"
            - name: GRAPHITE_HOST
              value: {{ .Values.global.statsd.graphiteHost }}
{{- if .Values.statsd.resources }}
          resources:
{{ toYaml .Values.statsd.resources | indent 13 }}
{{- end }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
{{- end }}
{{- end }}
