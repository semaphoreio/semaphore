# This is a simple Semaphore configuration file using Docker
# For more information about Semaphore configuration visit:
# https://docs.semaphoreci.com/reference/pipeline-yaml-reference/

version: v1.0  # Semaphore configuration version
name: "🎯 Simple CI Pipeline"  # Pipeline display name

# Define the machine type, OS image, and containers
agent:
  machine:
    type: {{ machine_type }}
    os_image: {{ os_image }}

  containers:
    - name: main
      image: 'registry.semaphoreci.com/node:20'  # Node.js 20 container

# Configure when to stop the pipeline early
fail_fast:
  stop:
    when: branch != 'main'  # Stop all blocks if a job fails on non-main branches
auto_cancel:
  running:
    when: branch != 'main'  # Cancel running pipelines on non-main branches
  queued:
    when: branch = 'main'   # Cancel queued pipelines on main branch

# Pipeline blocks represent groups of jobs that can run in parallel
blocks:
  # Block for testing
  - name: "🧪 Test"
    dependencies: []
    task:
      jobs:
        - name: "🟢 Run Tests"
          commands:
            - echo "Checking out code..."
            - echo "Installing dependencies..."
            - echo "Running test suite in container..."
            - echo "Tests completed successfully!"

  # Block for building Docker image
  - name: "🐳 Docker"
    dependencies: ["🧪 Test"]
    task:
      secrets:
        - name: dockerhub-credentials
      jobs:
        - name: "📦 Build and Push"
          commands:
            - echo "Logging into Docker registry..."
            - echo "Building Docker image..."
            - echo "Pushing image to registry..."
            - echo "Docker image published successfully!"

  # Block for deployment
  - name: "🚀 Deploy"
    dependencies: ["🐳 Docker"]  # Only deploy if Docker build succeeds
    task:
      jobs:
        - name: "🌍 Deploy to Production"
          commands:
            - echo "Preparing deployment..."
            - echo "Updating container version..."
            - echo "Rolling out new containers..."
            - echo "Deployment completed successfully!"
