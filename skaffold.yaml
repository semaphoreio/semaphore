apiVersion: skaffold/v4beta12
kind: Config
metadata:
  name: semaphore
build:
  local: {}
  artifacts:
    - image: ghcr.io/semaphoreio/github_hooks
      custom:
        buildCommand: "APP_ENV=prod make build.skaffold"
      context: github_hooks
    - image: ghcr.io/semaphoreio/auth
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: auth
    - image: ghcr.io/semaphoreio/guard
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: guard
    - image: ghcr.io/semaphoreio/badges
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: badge
    - image: ghcr.io/semaphoreio/front
      context: front
      custom:
        buildCommand: "DOCKER_BUILD_TARGET=dev MIX_ENV=prod make build.skaffold"
      sync:
        manual:
          - src: 'lib/**/*'
            dest: /app
          - src: 'config/**/*.exs'
            dest: /app
    - image: ghcr.io/semaphoreio/ppl
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: plumber/ppl
    - image: ghcr.io/semaphoreio/projecthub-grpc
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: projecthub
    - image: ghcr.io/semaphoreio/projecthub-rest-api
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: projecthub-rest-api
    - image: ghcr.io/semaphoreio/secrethub
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: secrethub
    - image: ghcr.io/semaphoreio/notifications
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: notifications
    - image: ghcr.io/semaphoreio/zebra
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: zebra
    - image: ghcr.io/semaphoreio/periodic-scheduler
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: periodic_scheduler/scheduler
    - image: ghcr.io/semaphoreio/dashboardhub
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: dashboardhub
    - image: ghcr.io/semaphoreio/github_notifier
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: github_notifier
    - image: ghcr.io/semaphoreio/branch_hub
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: branch_hub
    - image: ghcr.io/semaphoreio/public_api
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: public-api/v2
    - image: ghcr.io/semaphoreio/plumber-public
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: public-api/v1alpha
    - image: ghcr.io/semaphoreio/bootstrapper
      custom:
        buildCommand: "APP_ENV=prod make build.skaffold"
      context: bootstrapper
    - image: ghcr.io/semaphoreio/artifacthub
      custom:
        buildCommand: "APP_ENV=prod make build.skaffold"
      context: artifacthub
    - image: ghcr.io/semaphoreio/repository_hub
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: repository_hub
    - image: ghcr.io/semaphoreio/scouter
      custom:
        buildCommand: "MIX_ENV=prod make build.skaffold"
      context: scouter
    - image: ghcr.io/semaphoreio/keycloak-setup
      custom:
        buildCommand: "APP_ENV=prod make build.skaffold"
      context: keycloak/setup
    - image: ghcr.io/semaphoreio/keycloak
      custom:
        buildCommand: "APP_ENV=prod make build.skaffold"
      context: keycloak/image
deploy:
  helm:
    releases:
      - name: semaphore
        chartPath: helm-chart
        valuesFiles:
          - helm-chart/values.yaml
        setValues:
          global.development.writableRootFilesystem: true
          global.development.minimalDeployment: true
          global.development.skipTlsVerifyInternal: true # false if cert is not self signed
          global.domain.name: ""
          global.domain.ip: "" # minikube ip
          global.rootUser.email: ""
          global.organization.name: ""
          ingress.className: "nginx"
          ingress.ssl.type: "custom"
          ingress.ssl.crt: "" # use mkcert '*.semaphore.localhost' and later cat _wildcard.semaphore.localhost.pem | base64 -w 0
          ingress.ssl.key: "" # cat _wildcard.semaphore.localhost-key.pem | base64 -w 0
        version: 0.1.0
    flags:
      upgrade: ["--timeout", "120m"]
      install: ["--timeout", "120m"]
