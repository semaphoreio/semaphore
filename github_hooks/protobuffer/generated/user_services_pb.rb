# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: user.proto for package 'InternalApi.User'

require 'grpc'
require_relative 'user_pb'

module InternalApi
  module User
    module UserService
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'InternalApi.User.UserService'

        #
        # Operation is called to describe an existing user.
        # Operation is synchronous.
        #
        rpc :Describe, ::InternalApi::User::DescribeRequest, ::InternalApi::User::DescribeResponse
        #
        # Operation is called to find and describe an existing user based on repository provider id
        # Operation is synchronous.
        #
        rpc :DescribeByRepositoryProvider, ::InternalApi::User::DescribeByRepositoryProviderRequest, ::InternalApi::User::User
        #
        # Operation is called to find and describe an existing user based on email address
        # Operation is synchronous.
        #
        rpc :DescribeByEmail, ::InternalApi::User::DescribeByEmailRequest, ::InternalApi::User::User
        #
        # Operation is called to search for users
        # Operation is synchronous.
        #
        rpc :SearchUsers, ::InternalApi::User::SearchUsersRequest, ::InternalApi::User::SearchUsersResponse
        #
        # Operation is called to describe many users.
        # Operation is synchronous.
        #
        rpc :DescribeMany, ::InternalApi::User::DescribeManyRequest, ::InternalApi::User::DescribeManyResponse
        #
        # Operation is called to update an existing user.
        # Operation is synchronous.
        #
        rpc :Update, ::InternalApi::User::UpdateRequest, ::InternalApi::User::UpdateResponse
        #
        # Operation is called to delete an existing user and all their owned organizations.
        # Operation is synchronous.
        #
        rpc :DeleteWithOwnedOrgs, ::InternalApi::User::DeleteWithOwnedOrgsRequest, ::InternalApi::User::User
        #
        # Operation is called to regenerate a token for an existing user.
        # Operation is synchronous.
        #
        rpc :RegenerateToken, ::InternalApi::User::RegenerateTokenRequest, ::InternalApi::User::RegenerateTokenResponse
        #
        # Operation is called to list favorites for the user.
        # Operation is synchronous.
        #
        rpc :ListFavorites, ::InternalApi::User::ListFavoritesRequest, ::InternalApi::User::ListFavoritesResponse
        #
        # Operation is called to create favorite record.
        # Operation is synchronous.
        #
        rpc :CreateFavorite, ::InternalApi::User::Favorite, ::InternalApi::User::Favorite
        #
        # Operation is called to delete the favorite record.
        # Operation is synchronous.
        #
        rpc :DeleteFavorite, ::InternalApi::User::Favorite, ::InternalApi::User::Favorite
        #
        # Operation is called to check the status of an github token.
        # Operation is synchronous.
        #
        rpc :CheckGithubToken, ::InternalApi::User::CheckGithubTokenRequest, ::InternalApi::User::CheckGithubTokenResponse
        #
        # Operation is called to block the user based on their auth account.
        # Operation is synchronous.
        #
        rpc :BlockAccount, ::InternalApi::User::BlockAccountRequest, ::InternalApi::User::User
        #
        # Operation is called to unblock the user based on their auth account.
        # Operation is synchronous.
        #
        rpc :UnblockAccount, ::InternalApi::User::UnblockAccountRequest, ::InternalApi::User::User
        #
        # Operation is called to fetch a users repository token
        # Operation is synchronous.
        #
        rpc :GetRepositoryToken, ::InternalApi::User::GetRepositoryTokenRequest, ::InternalApi::User::GetRepositoryTokenResponse
        #
        # Operation is called to check and refresh the status of an repository provider
        # for a given user and provider type
        # Operation is synchronous.
        #
        rpc :RefreshRepositoryProvider, ::InternalApi::User::RefreshRepositoryProviderRequest, ::InternalApi::User::RefreshRepositoryProviderResponse
        #
        # Operation is called create a new user, passing username and name.
        # Operation is synchronous.
        #
        rpc :Create, ::InternalApi::User::CreateRequest, ::InternalApi::User::User
      end

      Stub = Service.rpc_stub_class
    end
  end
end
