# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: rbac.proto for package 'InternalApi.RBAC'

require 'grpc'
require_relative 'rbac_pb'

module InternalApi
  module RBAC
    module RBAC
      #
      # Role and permissions management service for semaphoreci
      #
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'InternalApi.RBAC.RBAC'

        #
        # Endpoint for checking user permissions
        # Operation is synchronous and idempotent.
        #
        rpc :ListUserPermissions, ::InternalApi::RBAC::ListUserPermissionsRequest, ::InternalApi::RBAC::ListUserPermissionsResponse
        #
        # Endpoint for listing all existing rbac permissions
        # Operation is synchronous and idempotent.
        #
        rpc :ListExistingPermissions, ::InternalApi::RBAC::ListExistingPermissionsRequest, ::InternalApi::RBAC::ListExistingPermissionsResponse
        #
        # Endpoint for assigning a Role to a Subject (User or Group).
        # Operation is synchronous and idempotent.
        #
        rpc :AssignRole, ::InternalApi::RBAC::AssignRoleRequest, ::InternalApi::RBAC::AssignRoleResponse
        #
        # Endpoint for retracting a Role assigned to a Subject (User or Group).
        # This endpoint should be used only for retracting roles that were assigned manually.
        # Operation is synchronous and idempotent.
        #
        rpc :RetractRole, ::InternalApi::RBAC::RetractRoleRequest, ::InternalApi::RBAC::RetractRoleResponse
        #
        # Endpoint for checking whether Subject(s) have specific Roles assigned
        # to them.
        # Operation is synchronous and idempotent.
        #
        rpc :SubjectsHaveRoles, ::InternalApi::RBAC::SubjectsHaveRolesRequest, ::InternalApi::RBAC::SubjectsHaveRolesResponse
        #
        # Endpoint for fetching roles.
        # It can be userd to fetch public or custom roles belonging to a specific organization.
        # It can be also used to fetch only org_level roles or project_level roles,
        # depending on data sent in ListRolesRequest
        # Operation is synchronous and idempotent.
        #
        rpc :ListRoles, ::InternalApi::RBAC::ListRolesRequest, ::InternalApi::RBAC::ListRolesResponse
        #
        # Endpoint for describing one specific Role
        # Operation is synchronous and idempotent.
        #
        rpc :DescribeRole, ::InternalApi::RBAC::DescribeRoleRequest, ::InternalApi::RBAC::DescribeRoleResponse
        #
        # Endpoint for modifying a Role
        # Operation is synchronous and idempotent.
        #
        rpc :ModifyRole, ::InternalApi::RBAC::ModifyRoleRequest, ::InternalApi::RBAC::ModifyRoleResponse
        #
        # Endpoint for deleting a Role
        # Operation is synchronous and idempotent.
        #
        rpc :DestroyRole, ::InternalApi::RBAC::DestroyRoleRequest, ::InternalApi::RBAC::DestroyRoleResponse
        #
        # Endpoint for fetching all organization or project members (Users who have any
        # role within the given org/project)
        # Operation is synchronous and idempotent.
        #
        rpc :ListMembers, ::InternalApi::RBAC::ListMembersRequest, ::InternalApi::RBAC::ListMembersResponse
        #
        # Endpoint for counting all organization members (Users who have any
        # role within the given org)
        # Operation is synchronous and idempotent.
        #
        rpc :CountMembers, ::InternalApi::RBAC::CountMembersRequest, ::InternalApi::RBAC::CountMembersResponse
        #
        # Endpoint for fetching ids of all organization a given user has access to.
        # User is assumed to have access to an organization if they have any role assigned
        # to them within that organization.
        # Operation is synchronous and idempotent.
        #
        rpc :ListAccessibleOrgs, ::InternalApi::RBAC::ListAccessibleOrgsRequest, ::InternalApi::RBAC::ListAccessibleOrgsResponse
        #
        # Endpoint for fetching ids of all projects a given user has access to within
        # given organization.
        # to them within that organization.
        # Operation is synchronous and idempotent.
        #
        rpc :ListAccessibleProjects, ::InternalApi::RBAC::ListAccessibleProjectsRequest, ::InternalApi::RBAC::ListAccessibleProjectsResponse
        #
        # Queues refreshing the resources (Collaborators and Projects) from a given Organization.
        # The list of collaborators is refreshed based on the Projects that are added to the Organization.
        # The operation is asynchronous.
        #
        rpc :RefreshCollaborators, ::InternalApi::RBAC::RefreshCollaboratorsRequest, ::InternalApi::RBAC::RefreshCollaboratorsResponse
      end

      Stub = Service.rpc_stub_class
    end
  end
end
