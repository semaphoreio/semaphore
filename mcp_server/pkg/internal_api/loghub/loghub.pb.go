// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.4
// source: loghub.proto

package loghub

import (
	response_status "github.com/semaphoreio/semaphore/mcp_server/pkg/internal_api/response_status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetLogEvents call request
//
// - job_id        = [required] UUID of the job.
// - starting_line = [required] line from which we want to get a list
type GetLogEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId        string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	StartingLine int32  `protobuf:"varint,2,opt,name=starting_line,json=startingLine,proto3" json:"starting_line,omitempty"`
}

func (x *GetLogEventsRequest) Reset() {
	*x = GetLogEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loghub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogEventsRequest) ProtoMessage() {}

func (x *GetLogEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loghub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogEventsRequest.ProtoReflect.Descriptor instead.
func (*GetLogEventsRequest) Descriptor() ([]byte, []int) {
	return file_loghub_proto_rawDescGZIP(), []int{0}
}

func (x *GetLogEventsRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *GetLogEventsRequest) GetStartingLine() int32 {
	if x != nil {
		return x.StartingLine
	}
	return 0
}

// Event is a key/value hash encoded in JSON. We use JSON encoding to boost
// performance and minimaze the need for data transformation from builders to
// the browser, or JSON apis, our current two main user interfaces.
//
// The format of the logs
// ----------------------
//
// Every log event begins with an "event" key that describes the type of the
// event. This is then followed by the timestamp when the event was created.
// We are keeping these two key/values pairs at the beggining two make it easy
// to filter the logs without actually parsing them. This filtering without JSON
// parsing comes handy on builders.
//
// Example events:
//
//	{"event": "job_started", "timestamp": 15234242342342}
//	{"event": "cmd_output", "timestamp": 15234242342341, "output": "running after deployment steps"}
//
// Types:
//
//   - All timestamps are Unix Timestamps in UTC zone encoded as integers.
//   - Exit Statuses are values from 0..255 and they represent Unix exit statuses of a process.
//
// Event types and definition of keys that are expected to be in them:
//
// - Job Started Event
//
//	{"event": "job_started", "timestamp": <integer>}
//
// - Job Finished Event
//
//	{"event": "job_finished", "timestamp": <integer>, "job_result": <string "failed" or "passed">}
//
// - Command Started Event
//
//	{"event": "cmd_started", "timestamp": <integer>, "directive": <string>}
//
// - Command Finished Event
//
//	{"event": "cmd_finished", "timestamp": <integer>, "directive": <string>, "exit_status": <integer>}
//
// - Command Output Event
//
//	{"event": "cmd_output", "timestamp": <integer>, "output": <string>}
//
// - Environment Variable Export Started
//
//	{"event": "env_var_export_started", "timestamp": <integer>, "env_var_name": <string>}
//
// - Environment Variable Export Finished
//
//	{"event": "env_var_export_finished", "timestamp": <integer>, "env_var_name": <string>, "exit_status": <integer>}
//
// - File Upload Started
//
//	{"event": "file_upload_started", "timestamp": <integer>, "file_path": <string>}
//
// - File Upload Finished
//
//	{"event": "file_upload_finished", "timestamp": <integer>, "file_path": <string>, "exit_status": <integer>}
//
// --------------------------------------------------------------
//
// - status = [required] Status of the reponse.
// - events = [required] List of events.
// - final  = [required] True if this is a final batch of events.
type GetLogEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *response_status.ResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Events []string                        `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	Final  bool                            `protobuf:"varint,3,opt,name=final,proto3" json:"final,omitempty"`
}

func (x *GetLogEventsResponse) Reset() {
	*x = GetLogEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loghub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogEventsResponse) ProtoMessage() {}

func (x *GetLogEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loghub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogEventsResponse.ProtoReflect.Descriptor instead.
func (*GetLogEventsResponse) Descriptor() ([]byte, []int) {
	return file_loghub_proto_rawDescGZIP(), []int{1}
}

func (x *GetLogEventsResponse) GetStatus() *response_status.ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetLogEventsResponse) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetLogEventsResponse) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

var File_loghub_proto protoreflect.FileDescriptor

var file_loghub_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x68,
	0x75, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x22, 0x79, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x32, 0x6b, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x68, 0x75, 0x62, 0x12,
	0x61, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x27, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x4c, 0x6f,
	0x67, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x68, 0x75, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x69, 0x6f, 0x2f, 0x73, 0x65, 0x6d,
	0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x63, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x68, 0x75, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_loghub_proto_rawDescOnce sync.Once
	file_loghub_proto_rawDescData = file_loghub_proto_rawDesc
)

func file_loghub_proto_rawDescGZIP() []byte {
	file_loghub_proto_rawDescOnce.Do(func() {
		file_loghub_proto_rawDescData = protoimpl.X.CompressGZIP(file_loghub_proto_rawDescData)
	})
	return file_loghub_proto_rawDescData
}

var file_loghub_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_loghub_proto_goTypes = []any{
	(*GetLogEventsRequest)(nil),            // 0: InternalApi.Loghub.GetLogEventsRequest
	(*GetLogEventsResponse)(nil),           // 1: InternalApi.Loghub.GetLogEventsResponse
	(*response_status.ResponseStatus)(nil), // 2: InternalApi.ResponseStatus
}
var file_loghub_proto_depIdxs = []int32{
	2, // 0: InternalApi.Loghub.GetLogEventsResponse.status:type_name -> InternalApi.ResponseStatus
	0, // 1: InternalApi.Loghub.Loghub.GetLogEvents:input_type -> InternalApi.Loghub.GetLogEventsRequest
	1, // 2: InternalApi.Loghub.Loghub.GetLogEvents:output_type -> InternalApi.Loghub.GetLogEventsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_loghub_proto_init() }
func file_loghub_proto_init() {
	if File_loghub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_loghub_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetLogEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loghub_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetLogEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_loghub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_loghub_proto_goTypes,
		DependencyIndexes: file_loghub_proto_depIdxs,
		MessageInfos:      file_loghub_proto_msgTypes,
	}.Build()
	File_loghub_proto = out.File
	file_loghub_proto_rawDesc = nil
	file_loghub_proto_goTypes = nil
	file_loghub_proto_depIdxs = nil
}
