version: '3.6'

services:
  app:
    container_name: rbac-ce
    image: ${IMAGE:-rbac-ce}:${TAG:-latest}
    build:
      context: .
      cache_from:
        - "${REGISTRY_HOST:-local}/rbac-ce/${BRANCH:-main}:${IMAGE_TAG:-test}"
      dockerfile: Dockerfile
      target: ${DOCKER_BUILD_TARGET:-dev}
      args:
        - BUILD_ENV=test
      ssh:
        - default
    ports:
      - "4000:4000"
    tty: true
    links:
      - db:db
      - rabbitmq:rabbitmq
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
    command: ["bash", "-c", "elixir --name app@127.0.0.1 -S mix run --no-halt"]

    environment:
      IN_DOCKER: "true"
      POSTGRES_DB_NAME: "rbac_ce"
      POSTGRES_DB_USER: "postgres"
      POSTGRES_DB_PASSWORD: "the-cake-is-a-lie"
      POSTGRES_DB_HOST: "db"
      POSTGRES_DB_POOL_SIZE: "5"
      BASE_DOMAIN: "localhost"
      CI: $CI
      MIX_ENV: ${MIX_ENV:-dev}
      LOG_LEVEL: "debug"
      AMQP_URL: "amqp://rabbitmq:5672"


    volumes:
      - .:/app

  db:
    image: postgres:9.6
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "the-cake-is-a-lie"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 5
  
  rabbitmq:
    image: rabbitmq:3.11.18-management
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit log_levels [{connection,error}]"
    restart: "on-failure"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 3s
      timeout: 3s
      retries: 5

volumes:
  postgres-data:
    driver: local
