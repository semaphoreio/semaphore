// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.0
// source: projecthub.proto

package projecthub

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	repository_integrator "github.com/semaphoreio/semaphore/velocity/pkg/protos/repository_integrator"
	user "github.com/semaphoreio/semaphore/velocity/pkg/protos/user"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseMeta_Code int32

const (
	ResponseMeta_OK                  ResponseMeta_Code = 0
	ResponseMeta_NOT_FOUND           ResponseMeta_Code = 2
	ResponseMeta_FAILED_PRECONDITION ResponseMeta_Code = 3
)

// Enum value maps for ResponseMeta_Code.
var (
	ResponseMeta_Code_name = map[int32]string{
		0: "OK",
		2: "NOT_FOUND",
		3: "FAILED_PRECONDITION",
	}
	ResponseMeta_Code_value = map[string]int32{
		"OK":                  0,
		"NOT_FOUND":           2,
		"FAILED_PRECONDITION": 3,
	}
)

func (x ResponseMeta_Code) Enum() *ResponseMeta_Code {
	p := new(ResponseMeta_Code)
	*p = x
	return p
}

func (x ResponseMeta_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseMeta_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[0].Descriptor()
}

func (ResponseMeta_Code) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[0]
}

func (x ResponseMeta_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseMeta_Code.Descriptor instead.
func (ResponseMeta_Code) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{1, 0}
}

type Project_Spec_Visibility int32

const (
	Project_Spec_PRIVATE Project_Spec_Visibility = 0
	Project_Spec_PUBLIC  Project_Spec_Visibility = 1
)

// Enum value maps for Project_Spec_Visibility.
var (
	Project_Spec_Visibility_name = map[int32]string{
		0: "PRIVATE",
		1: "PUBLIC",
	}
	Project_Spec_Visibility_value = map[string]int32{
		"PRIVATE": 0,
		"PUBLIC":  1,
	}
)

func (x Project_Spec_Visibility) Enum() *Project_Spec_Visibility {
	p := new(Project_Spec_Visibility)
	*p = x
	return p
}

func (x Project_Spec_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Project_Spec_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[1].Descriptor()
}

func (Project_Spec_Visibility) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[1]
}

func (x Project_Spec_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Project_Spec_Visibility.Descriptor instead.
func (Project_Spec_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 0}
}

type Project_Spec_PermissionType int32

const (
	Project_Spec_EMPTY               Project_Spec_PermissionType = 0
	Project_Spec_DEFAULT_BRANCH      Project_Spec_PermissionType = 1
	Project_Spec_NON_DEFAULT_BRANCH  Project_Spec_PermissionType = 2
	Project_Spec_PULL_REQUEST        Project_Spec_PermissionType = 3
	Project_Spec_FORKED_PULL_REQUEST Project_Spec_PermissionType = 4
	Project_Spec_TAG                 Project_Spec_PermissionType = 5
)

// Enum value maps for Project_Spec_PermissionType.
var (
	Project_Spec_PermissionType_name = map[int32]string{
		0: "EMPTY",
		1: "DEFAULT_BRANCH",
		2: "NON_DEFAULT_BRANCH",
		3: "PULL_REQUEST",
		4: "FORKED_PULL_REQUEST",
		5: "TAG",
	}
	Project_Spec_PermissionType_value = map[string]int32{
		"EMPTY":               0,
		"DEFAULT_BRANCH":      1,
		"NON_DEFAULT_BRANCH":  2,
		"PULL_REQUEST":        3,
		"FORKED_PULL_REQUEST": 4,
		"TAG":                 5,
	}
)

func (x Project_Spec_PermissionType) Enum() *Project_Spec_PermissionType {
	p := new(Project_Spec_PermissionType)
	*p = x
	return p
}

func (x Project_Spec_PermissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Project_Spec_PermissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[2].Descriptor()
}

func (Project_Spec_PermissionType) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[2]
}

func (x Project_Spec_PermissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Project_Spec_PermissionType.Descriptor instead.
func (Project_Spec_PermissionType) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 1}
}

type Project_Spec_Repository_RunType int32

const (
	Project_Spec_Repository_BRANCHES             Project_Spec_Repository_RunType = 0
	Project_Spec_Repository_TAGS                 Project_Spec_Repository_RunType = 1
	Project_Spec_Repository_PULL_REQUESTS        Project_Spec_Repository_RunType = 2
	Project_Spec_Repository_FORKED_PULL_REQUESTS Project_Spec_Repository_RunType = 3
	Project_Spec_Repository_DRAFT_PULL_REQUESTS  Project_Spec_Repository_RunType = 4
)

// Enum value maps for Project_Spec_Repository_RunType.
var (
	Project_Spec_Repository_RunType_name = map[int32]string{
		0: "BRANCHES",
		1: "TAGS",
		2: "PULL_REQUESTS",
		3: "FORKED_PULL_REQUESTS",
		4: "DRAFT_PULL_REQUESTS",
	}
	Project_Spec_Repository_RunType_value = map[string]int32{
		"BRANCHES":             0,
		"TAGS":                 1,
		"PULL_REQUESTS":        2,
		"FORKED_PULL_REQUESTS": 3,
		"DRAFT_PULL_REQUESTS":  4,
	}
)

func (x Project_Spec_Repository_RunType) Enum() *Project_Spec_Repository_RunType {
	p := new(Project_Spec_Repository_RunType)
	*p = x
	return p
}

func (x Project_Spec_Repository_RunType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Project_Spec_Repository_RunType) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[3].Descriptor()
}

func (Project_Spec_Repository_RunType) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[3]
}

func (x Project_Spec_Repository_RunType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Project_Spec_Repository_RunType.Descriptor instead.
func (Project_Spec_Repository_RunType) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 0, 0}
}

type Project_Spec_Repository_Status_PipelineFile_Level int32

const (
	Project_Spec_Repository_Status_PipelineFile_BLOCK    Project_Spec_Repository_Status_PipelineFile_Level = 0
	Project_Spec_Repository_Status_PipelineFile_PIPELINE Project_Spec_Repository_Status_PipelineFile_Level = 1
)

// Enum value maps for Project_Spec_Repository_Status_PipelineFile_Level.
var (
	Project_Spec_Repository_Status_PipelineFile_Level_name = map[int32]string{
		0: "BLOCK",
		1: "PIPELINE",
	}
	Project_Spec_Repository_Status_PipelineFile_Level_value = map[string]int32{
		"BLOCK":    0,
		"PIPELINE": 1,
	}
)

func (x Project_Spec_Repository_Status_PipelineFile_Level) Enum() *Project_Spec_Repository_Status_PipelineFile_Level {
	p := new(Project_Spec_Repository_Status_PipelineFile_Level)
	*p = x
	return p
}

func (x Project_Spec_Repository_Status_PipelineFile_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Project_Spec_Repository_Status_PipelineFile_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[4].Descriptor()
}

func (Project_Spec_Repository_Status_PipelineFile_Level) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[4]
}

func (x Project_Spec_Repository_Status_PipelineFile_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Project_Spec_Repository_Status_PipelineFile_Level.Descriptor instead.
func (Project_Spec_Repository_Status_PipelineFile_Level) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 0, 1, 0, 0}
}

type Project_Spec_Scheduler_Status int32

const (
	Project_Spec_Scheduler_STATUS_UNSPECIFIED Project_Spec_Scheduler_Status = 0
	Project_Spec_Scheduler_STATUS_INACTIVE    Project_Spec_Scheduler_Status = 1
	Project_Spec_Scheduler_STATUS_ACTIVE      Project_Spec_Scheduler_Status = 2
)

// Enum value maps for Project_Spec_Scheduler_Status.
var (
	Project_Spec_Scheduler_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_INACTIVE",
		2: "STATUS_ACTIVE",
	}
	Project_Spec_Scheduler_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_INACTIVE":    1,
		"STATUS_ACTIVE":      2,
	}
)

func (x Project_Spec_Scheduler_Status) Enum() *Project_Spec_Scheduler_Status {
	p := new(Project_Spec_Scheduler_Status)
	*p = x
	return p
}

func (x Project_Spec_Scheduler_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Project_Spec_Scheduler_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[5].Descriptor()
}

func (Project_Spec_Scheduler_Status) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[5]
}

func (x Project_Spec_Scheduler_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Project_Spec_Scheduler_Status.Descriptor instead.
func (Project_Spec_Scheduler_Status) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 1, 0}
}

type Project_Spec_Task_Status int32

const (
	Project_Spec_Task_STATUS_UNSPECIFIED Project_Spec_Task_Status = 0
	Project_Spec_Task_STATUS_INACTIVE    Project_Spec_Task_Status = 1
	Project_Spec_Task_STATUS_ACTIVE      Project_Spec_Task_Status = 2
)

// Enum value maps for Project_Spec_Task_Status.
var (
	Project_Spec_Task_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_INACTIVE",
		2: "STATUS_ACTIVE",
	}
	Project_Spec_Task_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_INACTIVE":    1,
		"STATUS_ACTIVE":      2,
	}
)

func (x Project_Spec_Task_Status) Enum() *Project_Spec_Task_Status {
	p := new(Project_Spec_Task_Status)
	*p = x
	return p
}

func (x Project_Spec_Task_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Project_Spec_Task_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[6].Descriptor()
}

func (Project_Spec_Task_Status) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[6]
}

func (x Project_Spec_Task_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Project_Spec_Task_Status.Descriptor instead.
func (Project_Spec_Task_Status) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 2, 0}
}

type Project_Status_State int32

const (
	Project_Status_INITIALIZING Project_Status_State = 0
	Project_Status_READY        Project_Status_State = 1
	Project_Status_ERROR        Project_Status_State = 2
	Project_Status_ONBOARDING   Project_Status_State = 3
)

// Enum value maps for Project_Status_State.
var (
	Project_Status_State_name = map[int32]string{
		0: "INITIALIZING",
		1: "READY",
		2: "ERROR",
		3: "ONBOARDING",
	}
	Project_Status_State_value = map[string]int32{
		"INITIALIZING": 0,
		"READY":        1,
		"ERROR":        2,
		"ONBOARDING":   3,
	}
)

func (x Project_Status_State) Enum() *Project_Status_State {
	p := new(Project_Status_State)
	*p = x
	return p
}

func (x Project_Status_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Project_Status_State) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[7].Descriptor()
}

func (Project_Status_State) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[7]
}

func (x Project_Status_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Project_Status_State.Descriptor instead.
func (Project_Status_State) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 2, 0}
}

type ListKeysetRequest_Direction int32

const (
	ListKeysetRequest_NEXT     ListKeysetRequest_Direction = 0
	ListKeysetRequest_PREVIOUS ListKeysetRequest_Direction = 1
)

// Enum value maps for ListKeysetRequest_Direction.
var (
	ListKeysetRequest_Direction_name = map[int32]string{
		0: "NEXT",
		1: "PREVIOUS",
	}
	ListKeysetRequest_Direction_value = map[string]int32{
		"NEXT":     0,
		"PREVIOUS": 1,
	}
)

func (x ListKeysetRequest_Direction) Enum() *ListKeysetRequest_Direction {
	p := new(ListKeysetRequest_Direction)
	*p = x
	return p
}

func (x ListKeysetRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListKeysetRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_projecthub_proto_enumTypes[8].Descriptor()
}

func (ListKeysetRequest_Direction) Type() protoreflect.EnumType {
	return &file_projecthub_proto_enumTypes[8]
}

func (x ListKeysetRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListKeysetRequest_Direction.Descriptor instead.
func (ListKeysetRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{7, 0}
}

type RequestMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	ReqId      string `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	OrgId      string `protobuf:"bytes,4,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	UserId     string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RequestMeta) Reset() {
	*x = RequestMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMeta) ProtoMessage() {}

func (x *RequestMeta) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMeta.ProtoReflect.Descriptor instead.
func (*RequestMeta) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{0}
}

func (x *RequestMeta) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *RequestMeta) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *RequestMeta) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *RequestMeta) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RequestMeta) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResponseMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string               `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Kind       string               `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	ReqId      string               `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	OrgId      string               `protobuf:"bytes,4,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	UserId     string               `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status     *ResponseMeta_Status `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ResponseMeta) Reset() {
	*x = ResponseMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMeta) ProtoMessage() {}

func (x *ResponseMeta) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMeta.ProtoReflect.Descriptor instead.
func (*ResponseMeta) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseMeta) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ResponseMeta) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ResponseMeta) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *ResponseMeta) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ResponseMeta) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResponseMeta) GetStatus() *ResponseMeta_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{2}
}

func (x *PaginationRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber   int32 `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize     int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalEntries int32 `protobuf:"varint,3,opt,name=total_entries,json=totalEntries,proto3" json:"total_entries,omitempty"`
	TotalPages   int32 `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{3}
}

func (x *PaginationResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *PaginationResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationResponse) GetTotalEntries() int32 {
	if x != nil {
		return x.TotalEntries
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Project_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *Project_Spec     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status   *Project_Status   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4}
}

func (x *Project) GetMetadata() *Project_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Project) GetSpec() *Project_Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Project) GetStatus() *Project_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// List call request
//
// - metadata = [required] Request metadata
// - owner_id = [optional] Project Owner ID
// - repo_url = [optional] Repository URL
// - soft_deleted = [optional] Return soft deleted projects? Default is false.
type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *RequestMeta       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Pagination  *PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OwnerId     string             `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	RepoUrl     string             `protobuf:"bytes,4,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	SoftDeleted bool               `protobuf:"varint,5,opt,name=soft_deleted,json=softDeleted,proto3" json:"soft_deleted,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{5}
}

func (x *ListRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ListRequest) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *ListRequest) GetSoftDeleted() bool {
	if x != nil {
		return x.SoftDeleted
	}
	return false
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   *ResponseMeta       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Projects   []*Project          `protobuf:"bytes,3,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{6}
}

func (x *ListResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type ListKeysetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata     *RequestMeta                `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	PageSize     int32                       `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken    string                      `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Direction    ListKeysetRequest_Direction `protobuf:"varint,4,opt,name=direction,proto3,enum=InternalApi.Projecthub.ListKeysetRequest_Direction" json:"direction,omitempty"`
	OwnerId      string                      `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	RepoUrl      string                      `protobuf:"bytes,6,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	CreatedAfter *timestamp.Timestamp        `protobuf:"bytes,7,opt,name=created_after,json=createdAfter,proto3" json:"created_after,omitempty"`
}

func (x *ListKeysetRequest) Reset() {
	*x = ListKeysetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKeysetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeysetRequest) ProtoMessage() {}

func (x *ListKeysetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeysetRequest.ProtoReflect.Descriptor instead.
func (*ListKeysetRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{7}
}

func (x *ListKeysetRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListKeysetRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListKeysetRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListKeysetRequest) GetDirection() ListKeysetRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return ListKeysetRequest_NEXT
}

func (x *ListKeysetRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ListKeysetRequest) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *ListKeysetRequest) GetCreatedAfter() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAfter
	}
	return nil
}

type ListKeysetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata          *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Projects          []*Project    `protobuf:"bytes,2,rep,name=projects,proto3" json:"projects,omitempty"`
	NextPageToken     string        `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	PreviousPageToken string        `protobuf:"bytes,4,opt,name=previous_page_token,json=previousPageToken,proto3" json:"previous_page_token,omitempty"`
}

func (x *ListKeysetResponse) Reset() {
	*x = ListKeysetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKeysetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKeysetResponse) ProtoMessage() {}

func (x *ListKeysetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKeysetResponse.ProtoReflect.Descriptor instead.
func (*ListKeysetResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{8}
}

func (x *ListKeysetResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListKeysetResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *ListKeysetResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListKeysetResponse) GetPreviousPageToken() string {
	if x != nil {
		return x.PreviousPageToken
	}
	return ""
}

// Describe call request
//
// - metadata = [required] Request metadata
// - id       = [required if no name] Project ID
// - name     = [required if no id] Project name
// - detailed = [optional] Return schedulers spec? Default if false.
// - soft_deleted = [optional] Return soft deleted projects? Default is false.
type DescribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id          string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Detailed    bool         `protobuf:"varint,4,opt,name=detailed,proto3" json:"detailed,omitempty"`
	SoftDeleted bool         `protobuf:"varint,5,opt,name=soft_deleted,json=softDeleted,proto3" json:"soft_deleted,omitempty"`
}

func (x *DescribeRequest) Reset() {
	*x = DescribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRequest) ProtoMessage() {}

func (x *DescribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRequest.ProtoReflect.Descriptor instead.
func (*DescribeRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DescribeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DescribeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeRequest) GetDetailed() bool {
	if x != nil {
		return x.Detailed
	}
	return false
}

func (x *DescribeRequest) GetSoftDeleted() bool {
	if x != nil {
		return x.SoftDeleted
	}
	return false
}

type DescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Project  *Project      `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *DescribeResponse) Reset() {
	*x = DescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeResponse) ProtoMessage() {}

func (x *DescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeResponse.ProtoReflect.Descriptor instead.
func (*DescribeResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DescribeResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// DescribeMany call request
//
// - metadata = [required] Request metadata
// - ids      = [required] List of project IDs
// - soft_deleted = [optional] Return soft deleted projects? Default is false.
type DescribeManyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata    *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Ids         []string     `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	SoftDeleted bool         `protobuf:"varint,3,opt,name=soft_deleted,json=softDeleted,proto3" json:"soft_deleted,omitempty"`
}

func (x *DescribeManyRequest) Reset() {
	*x = DescribeManyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeManyRequest) ProtoMessage() {}

func (x *DescribeManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeManyRequest.ProtoReflect.Descriptor instead.
func (*DescribeManyRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeManyRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DescribeManyRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DescribeManyRequest) GetSoftDeleted() bool {
	if x != nil {
		return x.SoftDeleted
	}
	return false
}

type DescribeManyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Projects []*Project    `protobuf:"bytes,2,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *DescribeManyResponse) Reset() {
	*x = DescribeManyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeManyResponse) ProtoMessage() {}

func (x *DescribeManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeManyResponse.ProtoReflect.Descriptor instead.
func (*DescribeManyResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeManyResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DescribeManyResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata       *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Project        *Project     `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	SkipOnboarding bool         `protobuf:"varint,3,opt,name=skip_onboarding,json=skipOnboarding,proto3" json:"skip_onboarding,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{13}
}

func (x *CreateRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateRequest) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *CreateRequest) GetSkipOnboarding() bool {
	if x != nil {
		return x.SkipOnboarding
	}
	return false
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Project  *Project      `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{14}
}

func (x *CreateResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata               *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Project                *Project     `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	OmitSchedulersAndTasks bool         `protobuf:"varint,3,opt,name=omit_schedulers_and_tasks,json=omitSchedulersAndTasks,proto3" json:"omit_schedulers_and_tasks,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateRequest) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *UpdateRequest) GetOmitSchedulersAndTasks() bool {
	if x != nil {
		return x.OmitSchedulersAndTasks
	}
	return false
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Project  *Project      `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type DestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name     string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DestroyRequest) Reset() {
	*x = DestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyRequest) ProtoMessage() {}

func (x *DestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyRequest.ProtoReflect.Descriptor instead.
func (*DestroyRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{17}
}

func (x *DestroyRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DestroyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DestroyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DestroyResponse) Reset() {
	*x = DestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyResponse) ProtoMessage() {}

func (x *DestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyResponse.ProtoReflect.Descriptor instead.
func (*DestroyResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{18}
}

func (x *DestroyResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RestoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RestoreRequest) Reset() {
	*x = RestoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreRequest) ProtoMessage() {}

func (x *RestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreRequest.ProtoReflect.Descriptor instead.
func (*RestoreRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{19}
}

func (x *RestoreRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RestoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RestoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *RestoreResponse) Reset() {
	*x = RestoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreResponse) ProtoMessage() {}

func (x *RestoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreResponse.ProtoReflect.Descriptor instead.
func (*RestoreResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{20}
}

func (x *RestoreResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Users call request
//
// - id = [required] project uuid.
type UsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UsersRequest) Reset() {
	*x = UsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersRequest) ProtoMessage() {}

func (x *UsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersRequest.ProtoReflect.Descriptor instead.
func (*UsersRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{21}
}

func (x *UsersRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UsersRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Users call response
//
// - id = [required] project uuid.
type UsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Users    []*user.User  `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UsersResponse) Reset() {
	*x = UsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersResponse) ProtoMessage() {}

func (x *UsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersResponse.ProtoReflect.Descriptor instead.
func (*UsersResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{22}
}

func (x *UsersResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UsersResponse) GetUsers() []*user.User {
	if x != nil {
		return x.Users
	}
	return nil
}

// CheckDeployKey call request
//
// - id = [required] project uuid.
type CheckDeployKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CheckDeployKeyRequest) Reset() {
	*x = CheckDeployKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDeployKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDeployKeyRequest) ProtoMessage() {}

func (x *CheckDeployKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDeployKeyRequest.ProtoReflect.Descriptor instead.
func (*CheckDeployKeyRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{23}
}

func (x *CheckDeployKeyRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CheckDeployKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// CheckDeployKey call response
type CheckDeployKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *ResponseMeta                     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	DeployKey *CheckDeployKeyResponse_DeployKey `protobuf:"bytes,2,opt,name=deploy_key,json=deployKey,proto3" json:"deploy_key,omitempty"`
}

func (x *CheckDeployKeyResponse) Reset() {
	*x = CheckDeployKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDeployKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDeployKeyResponse) ProtoMessage() {}

func (x *CheckDeployKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDeployKeyResponse.ProtoReflect.Descriptor instead.
func (*CheckDeployKeyResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{24}
}

func (x *CheckDeployKeyResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CheckDeployKeyResponse) GetDeployKey() *CheckDeployKeyResponse_DeployKey {
	if x != nil {
		return x.DeployKey
	}
	return nil
}

// RegenerateDeployKey call request
//
// - id = [required] project uuid.
type RegenerateDeployKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegenerateDeployKeyRequest) Reset() {
	*x = RegenerateDeployKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateDeployKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateDeployKeyRequest) ProtoMessage() {}

func (x *RegenerateDeployKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateDeployKeyRequest.ProtoReflect.Descriptor instead.
func (*RegenerateDeployKeyRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{25}
}

func (x *RegenerateDeployKeyRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegenerateDeployKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RegenerateDeployKey call response
type RegenerateDeployKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *ResponseMeta                          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	DeployKey *RegenerateDeployKeyResponse_DeployKey `protobuf:"bytes,2,opt,name=deploy_key,json=deployKey,proto3" json:"deploy_key,omitempty"`
}

func (x *RegenerateDeployKeyResponse) Reset() {
	*x = RegenerateDeployKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateDeployKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateDeployKeyResponse) ProtoMessage() {}

func (x *RegenerateDeployKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateDeployKeyResponse.ProtoReflect.Descriptor instead.
func (*RegenerateDeployKeyResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{26}
}

func (x *RegenerateDeployKeyResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegenerateDeployKeyResponse) GetDeployKey() *RegenerateDeployKeyResponse_DeployKey {
	if x != nil {
		return x.DeployKey
	}
	return nil
}

// CheckWebhook call request
//
// - id = [required] project uuid.
type CheckWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CheckWebhookRequest) Reset() {
	*x = CheckWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWebhookRequest) ProtoMessage() {}

func (x *CheckWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWebhookRequest.ProtoReflect.Descriptor instead.
func (*CheckWebhookRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{27}
}

func (x *CheckWebhookRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CheckWebhookRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// CheckWebhook call response
type CheckWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Webhook  *Webhook      `protobuf:"bytes,2,opt,name=webhook,proto3" json:"webhook,omitempty"`
}

func (x *CheckWebhookResponse) Reset() {
	*x = CheckWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckWebhookResponse) ProtoMessage() {}

func (x *CheckWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckWebhookResponse.ProtoReflect.Descriptor instead.
func (*CheckWebhookResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{28}
}

func (x *CheckWebhookResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CheckWebhookResponse) GetWebhook() *Webhook {
	if x != nil {
		return x.Webhook
	}
	return nil
}

// RegenerateWebhook call request
//
// - id = [required] project uuid.
type RegenerateWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegenerateWebhookRequest) Reset() {
	*x = RegenerateWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateWebhookRequest) ProtoMessage() {}

func (x *RegenerateWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateWebhookRequest.ProtoReflect.Descriptor instead.
func (*RegenerateWebhookRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{29}
}

func (x *RegenerateWebhookRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegenerateWebhookRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RegenerateWebhook call response
type RegenerateWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Webhook  *Webhook      `protobuf:"bytes,2,opt,name=webhook,proto3" json:"webhook,omitempty"`
}

func (x *RegenerateWebhookResponse) Reset() {
	*x = RegenerateWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateWebhookResponse) ProtoMessage() {}

func (x *RegenerateWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateWebhookResponse.ProtoReflect.Descriptor instead.
func (*RegenerateWebhookResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{30}
}

func (x *RegenerateWebhookResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegenerateWebhookResponse) GetWebhook() *Webhook {
	if x != nil {
		return x.Webhook
	}
	return nil
}

type Webhook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Webhook) Reset() {
	*x = Webhook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Webhook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Webhook) ProtoMessage() {}

func (x *Webhook) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Webhook.ProtoReflect.Descriptor instead.
func (*Webhook) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{31}
}

func (x *Webhook) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// ChangeProjectOwner call request
//
// - id      = [required] project uuid.
// - user_id = [required] new project owner uuid.
type ChangeProjectOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	UserId   string       `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ChangeProjectOwnerRequest) Reset() {
	*x = ChangeProjectOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeProjectOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeProjectOwnerRequest) ProtoMessage() {}

func (x *ChangeProjectOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeProjectOwnerRequest.ProtoReflect.Descriptor instead.
func (*ChangeProjectOwnerRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{32}
}

func (x *ChangeProjectOwnerRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ChangeProjectOwnerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeProjectOwnerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// ChangeProjectOwner call response
type ChangeProjectOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ChangeProjectOwnerResponse) Reset() {
	*x = ChangeProjectOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeProjectOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeProjectOwnerResponse) ProtoMessage() {}

func (x *ChangeProjectOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeProjectOwnerResponse.ProtoReflect.Descriptor instead.
func (*ChangeProjectOwnerResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{33}
}

func (x *ChangeProjectOwnerResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ForkAndCreate call request
type ForkAndCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Project  *Project     `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ForkAndCreateRequest) Reset() {
	*x = ForkAndCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkAndCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkAndCreateRequest) ProtoMessage() {}

func (x *ForkAndCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkAndCreateRequest.ProtoReflect.Descriptor instead.
func (*ForkAndCreateRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{34}
}

func (x *ForkAndCreateRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ForkAndCreateRequest) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// ForkAndCreate call response
type ForkAndCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Project  *Project      `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ForkAndCreateResponse) Reset() {
	*x = ForkAndCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkAndCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkAndCreateResponse) ProtoMessage() {}

func (x *ForkAndCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkAndCreateResponse.ProtoReflect.Descriptor instead.
func (*ForkAndCreateResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{35}
}

func (x *ForkAndCreateResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ForkAndCreateResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// GithubAppSwitch call request
//
// - id      = [required] project uuid.
type GithubAppSwitchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GithubAppSwitchRequest) Reset() {
	*x = GithubAppSwitchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubAppSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubAppSwitchRequest) ProtoMessage() {}

func (x *GithubAppSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubAppSwitchRequest.ProtoReflect.Descriptor instead.
func (*GithubAppSwitchRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{36}
}

func (x *GithubAppSwitchRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GithubAppSwitchRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GithubAppSwitch call response
type GithubAppSwitchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GithubAppSwitchResponse) Reset() {
	*x = GithubAppSwitchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GithubAppSwitchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GithubAppSwitchResponse) ProtoMessage() {}

func (x *GithubAppSwitchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GithubAppSwitchResponse.ProtoReflect.Descriptor instead.
func (*GithubAppSwitchResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{37}
}

func (x *GithubAppSwitchResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// FinishOnboarding call request
//
// - id      = [required] project uuid.
type FinishOnboardingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FinishOnboardingRequest) Reset() {
	*x = FinishOnboardingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishOnboardingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishOnboardingRequest) ProtoMessage() {}

func (x *FinishOnboardingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishOnboardingRequest.ProtoReflect.Descriptor instead.
func (*FinishOnboardingRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{38}
}

func (x *FinishOnboardingRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FinishOnboardingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// FinishOnboarding call response
type FinishOnboardingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *FinishOnboardingResponse) Reset() {
	*x = FinishOnboardingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishOnboardingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishOnboardingResponse) ProtoMessage() {}

func (x *FinishOnboardingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishOnboardingResponse.ProtoReflect.Descriptor instead.
func (*FinishOnboardingResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{39}
}

func (x *FinishOnboardingResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// RegenerateWebhook call request
//
// - id = [required] project uuid.
type RegenerateWebhookSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *RequestMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Id       string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegenerateWebhookSecretRequest) Reset() {
	*x = RegenerateWebhookSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateWebhookSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateWebhookSecretRequest) ProtoMessage() {}

func (x *RegenerateWebhookSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateWebhookSecretRequest.ProtoReflect.Descriptor instead.
func (*RegenerateWebhookSecretRequest) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{40}
}

func (x *RegenerateWebhookSecretRequest) GetMetadata() *RequestMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegenerateWebhookSecretRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// RegenerateWebhook call response
//
// - secret = [required] new secret token for a project
type RegenerateWebhookSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Secret   string        `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *RegenerateWebhookSecretResponse) Reset() {
	*x = RegenerateWebhookSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateWebhookSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateWebhookSecretResponse) ProtoMessage() {}

func (x *RegenerateWebhookSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateWebhookSecretResponse.ProtoReflect.Descriptor instead.
func (*RegenerateWebhookSecretResponse) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{41}
}

func (x *RegenerateWebhookSecretResponse) GetMetadata() *ResponseMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegenerateWebhookSecretResponse) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

// Published with routing key: 'created'.
// All fields are required.
type ProjectCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string               `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	OrgId     string               `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
}

func (x *ProjectCreated) Reset() {
	*x = ProjectCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCreated) ProtoMessage() {}

func (x *ProjectCreated) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCreated.ProtoReflect.Descriptor instead.
func (*ProjectCreated) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{42}
}

func (x *ProjectCreated) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectCreated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProjectCreated) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// Published with routing key: 'deleted'.
// All fields are required.
type ProjectDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string               `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	OrgId     string               `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
}

func (x *ProjectDeleted) Reset() {
	*x = ProjectDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDeleted) ProtoMessage() {}

func (x *ProjectDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDeleted.ProtoReflect.Descriptor instead.
func (*ProjectDeleted) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{43}
}

func (x *ProjectDeleted) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectDeleted) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProjectDeleted) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// Published with routing key: 'restored'.
// All fields are required.
type ProjectRestored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string               `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	OrgId     string               `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
}

func (x *ProjectRestored) Reset() {
	*x = ProjectRestored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRestored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRestored) ProtoMessage() {}

func (x *ProjectRestored) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRestored.ProtoReflect.Descriptor instead.
func (*ProjectRestored) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{44}
}

func (x *ProjectRestored) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectRestored) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProjectRestored) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// Published with routing key: 'updated'.
// All fields are required.
type ProjectUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string               `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OrgId     string               `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ProjectUpdated) Reset() {
	*x = ProjectUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectUpdated) ProtoMessage() {}

func (x *ProjectUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectUpdated.ProtoReflect.Descriptor instead.
func (*ProjectUpdated) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{45}
}

func (x *ProjectUpdated) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectUpdated) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ProjectUpdated) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Published with routing key: 'collabortors_changed'.
// All fields are required.
type CollaboratorsChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string               `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *CollaboratorsChanged) Reset() {
	*x = CollaboratorsChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollaboratorsChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollaboratorsChanged) ProtoMessage() {}

func (x *CollaboratorsChanged) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollaboratorsChanged.ProtoReflect.Descriptor instead.
func (*CollaboratorsChanged) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{46}
}

func (x *CollaboratorsChanged) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CollaboratorsChanged) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ResponseMeta_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    ResponseMeta_Code `protobuf:"varint,1,opt,name=code,proto3,enum=InternalApi.Projecthub.ResponseMeta_Code" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResponseMeta_Status) Reset() {
	*x = ResponseMeta_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMeta_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMeta_Status) ProtoMessage() {}

func (x *ResponseMeta_Status) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMeta_Status.ProtoReflect.Descriptor instead.
func (*ResponseMeta_Status) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ResponseMeta_Status) GetCode() ResponseMeta_Code {
	if x != nil {
		return x.Code
	}
	return ResponseMeta_OK
}

func (x *ResponseMeta_Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Project_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id          string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId     string               `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	OrgId       string               `protobuf:"bytes,4,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Description string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Project_Metadata) Reset() {
	*x = Project_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Metadata) ProtoMessage() {}

func (x *Project_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Metadata.ProtoReflect.Descriptor instead.
func (*Project_Metadata) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Project_Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_Metadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project_Metadata) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Project_Metadata) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Project_Metadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project_Metadata) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Spec
// - repository           = [required] Data about repository
// - schedulers           = [optional, default = []] List of scheluders
// - private              = [optional, default = true, deprecated] Private project will be visible only for members of an organization.
// - public               = [optional, default = false, deprecated] Public project will be visible for everyone, even anonymous users.
// - visibility           = [optional, default = PRIVATE] Public project will be visible for everyone, even anonymous users.
// - custom_permissions   = [required if restricted organization] True if project do not follow organization defaults for debug/attach permissions.
// - debug_permissions    = [required if restricted organization] List of types for which debug sessions are allowed. Used only if custom_permissions is set to true.
// - attach_permissions   = [required if restricted organization] List of types for which attached sessions are allowed. Used only if custom_permissions is set to true.
type Project_Spec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository        *Project_Spec_Repository      `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Schedulers        []*Project_Spec_Scheduler     `protobuf:"bytes,2,rep,name=schedulers,proto3" json:"schedulers,omitempty"`
	Private           bool                          `protobuf:"varint,3,opt,name=private,proto3" json:"private,omitempty"`
	Public            bool                          `protobuf:"varint,4,opt,name=public,proto3" json:"public,omitempty"`
	Visibility        Project_Spec_Visibility       `protobuf:"varint,5,opt,name=visibility,proto3,enum=InternalApi.Projecthub.Project_Spec_Visibility" json:"visibility,omitempty"`
	DebugPermissions  []Project_Spec_PermissionType `protobuf:"varint,6,rep,packed,name=debug_permissions,json=debugPermissions,proto3,enum=InternalApi.Projecthub.Project_Spec_PermissionType" json:"debug_permissions,omitempty"`
	AttachPermissions []Project_Spec_PermissionType `protobuf:"varint,7,rep,packed,name=attach_permissions,json=attachPermissions,proto3,enum=InternalApi.Projecthub.Project_Spec_PermissionType" json:"attach_permissions,omitempty"`
	CustomPermissions bool                          `protobuf:"varint,8,opt,name=custom_permissions,json=customPermissions,proto3" json:"custom_permissions,omitempty"`
	ArtifactStoreId   string                        `protobuf:"bytes,9,opt,name=artifact_store_id,json=artifactStoreId,proto3" json:"artifact_store_id,omitempty"`
	CacheId           string                        `protobuf:"bytes,10,opt,name=cache_id,json=cacheId,proto3" json:"cache_id,omitempty"`
	DockerRegistryId  string                        `protobuf:"bytes,11,opt,name=docker_registry_id,json=dockerRegistryId,proto3" json:"docker_registry_id,omitempty"`
	Tasks             []*Project_Spec_Task          `protobuf:"bytes,12,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *Project_Spec) Reset() {
	*x = Project_Spec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec) ProtoMessage() {}

func (x *Project_Spec) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec.ProtoReflect.Descriptor instead.
func (*Project_Spec) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Project_Spec) GetRepository() *Project_Spec_Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *Project_Spec) GetSchedulers() []*Project_Spec_Scheduler {
	if x != nil {
		return x.Schedulers
	}
	return nil
}

func (x *Project_Spec) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *Project_Spec) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Project_Spec) GetVisibility() Project_Spec_Visibility {
	if x != nil {
		return x.Visibility
	}
	return Project_Spec_PRIVATE
}

func (x *Project_Spec) GetDebugPermissions() []Project_Spec_PermissionType {
	if x != nil {
		return x.DebugPermissions
	}
	return nil
}

func (x *Project_Spec) GetAttachPermissions() []Project_Spec_PermissionType {
	if x != nil {
		return x.AttachPermissions
	}
	return nil
}

func (x *Project_Spec) GetCustomPermissions() bool {
	if x != nil {
		return x.CustomPermissions
	}
	return false
}

func (x *Project_Spec) GetArtifactStoreId() string {
	if x != nil {
		return x.ArtifactStoreId
	}
	return ""
}

func (x *Project_Spec) GetCacheId() string {
	if x != nil {
		return x.CacheId
	}
	return ""
}

func (x *Project_Spec) GetDockerRegistryId() string {
	if x != nil {
		return x.DockerRegistryId
	}
	return ""
}

func (x *Project_Spec) GetTasks() []*Project_Spec_Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type Project_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         Project_Status_State          `protobuf:"varint,1,opt,name=state,proto3,enum=InternalApi.Projecthub.Project_Status_State" json:"state,omitempty"`
	StateReason   string                        `protobuf:"bytes,2,opt,name=state_reason,json=stateReason,proto3" json:"state_reason,omitempty"`
	Cache         *Project_Status_Cache         `protobuf:"bytes,3,opt,name=cache,proto3" json:"cache,omitempty"`
	ArtifactStore *Project_Status_ArtifactStore `protobuf:"bytes,4,opt,name=artifact_store,json=artifactStore,proto3" json:"artifact_store,omitempty"`
	Repository    *Project_Status_Repository    `protobuf:"bytes,5,opt,name=repository,proto3" json:"repository,omitempty"`
	Analysis      *Project_Status_Analysis      `protobuf:"bytes,6,opt,name=analysis,proto3" json:"analysis,omitempty"`
	// indicates if creator's permissions have been setup in RBAC
	Permissions *Project_Status_Permissions `protobuf:"bytes,7,opt,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *Project_Status) Reset() {
	*x = Project_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Status) ProtoMessage() {}

func (x *Project_Status) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Status.ProtoReflect.Descriptor instead.
func (*Project_Status) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Project_Status) GetState() Project_Status_State {
	if x != nil {
		return x.State
	}
	return Project_Status_INITIALIZING
}

func (x *Project_Status) GetStateReason() string {
	if x != nil {
		return x.StateReason
	}
	return ""
}

func (x *Project_Status) GetCache() *Project_Status_Cache {
	if x != nil {
		return x.Cache
	}
	return nil
}

func (x *Project_Status) GetArtifactStore() *Project_Status_ArtifactStore {
	if x != nil {
		return x.ArtifactStore
	}
	return nil
}

func (x *Project_Status) GetRepository() *Project_Status_Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *Project_Status) GetAnalysis() *Project_Status_Analysis {
	if x != nil {
		return x.Analysis
	}
	return nil
}

func (x *Project_Status) GetPermissions() *Project_Status_Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Project_Spec_Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                string                                      `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name               string                                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner              string                                      `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	RunOn              []Project_Spec_Repository_RunType           `protobuf:"varint,4,rep,packed,name=run_on,json=runOn,proto3,enum=InternalApi.Projecthub.Project_Spec_Repository_RunType" json:"run_on,omitempty"`
	ForkedPullRequests *Project_Spec_Repository_ForkedPullRequests `protobuf:"bytes,5,opt,name=forked_pull_requests,json=forkedPullRequests,proto3" json:"forked_pull_requests,omitempty"`
	// Types that are assignable to RunPresent:
	//
	//	*Project_Spec_Repository_Run
	RunPresent isProject_Spec_Repository_RunPresent `protobuf_oneof:"run_present"`
	// [optional] Which pipeline file to run when a hook is received. Default: .semaphore/semaphore.yml
	PipelineFile string `protobuf:"bytes,7,opt,name=pipeline_file,json=pipelineFile,proto3" json:"pipeline_file,omitempty"`
	// [optional] Which pipelines should report statuses on repository. Default: None
	Status *Project_Spec_Repository_Status `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	// [optional] Which branches and tags should be build. Default: None
	Whitelist *Project_Spec_Repository_Whitelist `protobuf:"bytes,9,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
	// [required, readonly] Visibility status of a repository.
	Public bool `protobuf:"varint,10,opt,name=public,proto3" json:"public,omitempty"`
	// [required, readonly] Integration Type of a repository.
	IntegrationType repository_integrator.IntegrationType `protobuf:"varint,11,opt,name=integration_type,json=integrationType,proto3,enum=InternalApi.RepositoryIntegrator.IntegrationType" json:"integration_type,omitempty"`
	// [required, readonly] Connection status between Semaphore and repository.
	Connected bool   `protobuf:"varint,12,opt,name=connected,proto3" json:"connected,omitempty"`
	Id        string `protobuf:"bytes,13,opt,name=id,proto3" json:"id,omitempty"`
	// [required, readonly] Default branch on repository
	DefaultBranch string `protobuf:"bytes,14,opt,name=default_branch,json=defaultBranch,proto3" json:"default_branch,omitempty"`
}

func (x *Project_Spec_Repository) Reset() {
	*x = Project_Spec_Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec_Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec_Repository) ProtoMessage() {}

func (x *Project_Spec_Repository) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec_Repository.ProtoReflect.Descriptor instead.
func (*Project_Spec_Repository) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 0}
}

func (x *Project_Spec_Repository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Project_Spec_Repository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_Spec_Repository) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Project_Spec_Repository) GetRunOn() []Project_Spec_Repository_RunType {
	if x != nil {
		return x.RunOn
	}
	return nil
}

func (x *Project_Spec_Repository) GetForkedPullRequests() *Project_Spec_Repository_ForkedPullRequests {
	if x != nil {
		return x.ForkedPullRequests
	}
	return nil
}

func (m *Project_Spec_Repository) GetRunPresent() isProject_Spec_Repository_RunPresent {
	if m != nil {
		return m.RunPresent
	}
	return nil
}

func (x *Project_Spec_Repository) GetRun() bool {
	if x, ok := x.GetRunPresent().(*Project_Spec_Repository_Run); ok {
		return x.Run
	}
	return false
}

func (x *Project_Spec_Repository) GetPipelineFile() string {
	if x != nil {
		return x.PipelineFile
	}
	return ""
}

func (x *Project_Spec_Repository) GetStatus() *Project_Spec_Repository_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Project_Spec_Repository) GetWhitelist() *Project_Spec_Repository_Whitelist {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

func (x *Project_Spec_Repository) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Project_Spec_Repository) GetIntegrationType() repository_integrator.IntegrationType {
	if x != nil {
		return x.IntegrationType
	}
	return repository_integrator.IntegrationType_GITHUB_OAUTH_TOKEN
}

func (x *Project_Spec_Repository) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *Project_Spec_Repository) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project_Spec_Repository) GetDefaultBranch() string {
	if x != nil {
		return x.DefaultBranch
	}
	return ""
}

type isProject_Spec_Repository_RunPresent interface {
	isProject_Spec_Repository_RunPresent()
}

type Project_Spec_Repository_Run struct {
	Run bool `protobuf:"varint,6,opt,name=run,proto3,oneof"`
}

func (*Project_Spec_Repository_Run) isProject_Spec_Repository_RunPresent() {}

type Project_Spec_Scheduler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Branch       string                        `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	At           string                        `protobuf:"bytes,4,opt,name=at,proto3" json:"at,omitempty"`
	PipelineFile string                        `protobuf:"bytes,5,opt,name=pipeline_file,json=pipelineFile,proto3" json:"pipeline_file,omitempty"`
	Status       Project_Spec_Scheduler_Status `protobuf:"varint,6,opt,name=status,proto3,enum=InternalApi.Projecthub.Project_Spec_Scheduler_Status" json:"status,omitempty"`
}

func (x *Project_Spec_Scheduler) Reset() {
	*x = Project_Spec_Scheduler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec_Scheduler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec_Scheduler) ProtoMessage() {}

func (x *Project_Spec_Scheduler) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec_Scheduler.ProtoReflect.Descriptor instead.
func (*Project_Spec_Scheduler) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 1}
}

func (x *Project_Spec_Scheduler) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project_Spec_Scheduler) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_Spec_Scheduler) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Project_Spec_Scheduler) GetAt() string {
	if x != nil {
		return x.At
	}
	return ""
}

func (x *Project_Spec_Scheduler) GetPipelineFile() string {
	if x != nil {
		return x.PipelineFile
	}
	return ""
}

func (x *Project_Spec_Scheduler) GetStatus() Project_Spec_Scheduler_Status {
	if x != nil {
		return x.Status
	}
	return Project_Spec_Scheduler_STATUS_UNSPECIFIED
}

type Project_Spec_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Branch       string                         `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	At           string                         `protobuf:"bytes,4,opt,name=at,proto3" json:"at,omitempty"`
	PipelineFile string                         `protobuf:"bytes,5,opt,name=pipeline_file,json=pipelineFile,proto3" json:"pipeline_file,omitempty"`
	Status       Project_Spec_Task_Status       `protobuf:"varint,6,opt,name=status,proto3,enum=InternalApi.Projecthub.Project_Spec_Task_Status" json:"status,omitempty"`
	Recurring    bool                           `protobuf:"varint,7,opt,name=recurring,proto3" json:"recurring,omitempty"`
	Parameters   []*Project_Spec_Task_Parameter `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Description  string                         `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Project_Spec_Task) Reset() {
	*x = Project_Spec_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec_Task) ProtoMessage() {}

func (x *Project_Spec_Task) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec_Task.ProtoReflect.Descriptor instead.
func (*Project_Spec_Task) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 2}
}

func (x *Project_Spec_Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project_Spec_Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_Spec_Task) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Project_Spec_Task) GetAt() string {
	if x != nil {
		return x.At
	}
	return ""
}

func (x *Project_Spec_Task) GetPipelineFile() string {
	if x != nil {
		return x.PipelineFile
	}
	return ""
}

func (x *Project_Spec_Task) GetStatus() Project_Spec_Task_Status {
	if x != nil {
		return x.Status
	}
	return Project_Spec_Task_STATUS_UNSPECIFIED
}

func (x *Project_Spec_Task) GetRecurring() bool {
	if x != nil {
		return x.Recurring
	}
	return false
}

func (x *Project_Spec_Task) GetParameters() []*Project_Spec_Task_Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Project_Spec_Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// ForkedPullRequests
//
// # Contains options regarding forked Pull Requests
//
// - allowed_secrets      = [optional, default = []] list of secrets that can be exported. Empty list means that no secret will be exported.
// - allowed_contributors = [optional, default = []] list of contributors that can create workflows from forked PRs. Empty list means that everyone can.
type Project_Spec_Repository_ForkedPullRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedSecrets      []string `protobuf:"bytes,1,rep,name=allowed_secrets,json=allowedSecrets,proto3" json:"allowed_secrets,omitempty"`
	AllowedContributors []string `protobuf:"bytes,2,rep,name=allowed_contributors,json=allowedContributors,proto3" json:"allowed_contributors,omitempty"`
}

func (x *Project_Spec_Repository_ForkedPullRequests) Reset() {
	*x = Project_Spec_Repository_ForkedPullRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec_Repository_ForkedPullRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec_Repository_ForkedPullRequests) ProtoMessage() {}

func (x *Project_Spec_Repository_ForkedPullRequests) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec_Repository_ForkedPullRequests.ProtoReflect.Descriptor instead.
func (*Project_Spec_Repository_ForkedPullRequests) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 0, 0}
}

func (x *Project_Spec_Repository_ForkedPullRequests) GetAllowedSecrets() []string {
	if x != nil {
		return x.AllowedSecrets
	}
	return nil
}

func (x *Project_Spec_Repository_ForkedPullRequests) GetAllowedContributors() []string {
	if x != nil {
		return x.AllowedContributors
	}
	return nil
}

type Project_Spec_Repository_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineFiles []*Project_Spec_Repository_Status_PipelineFile `protobuf:"bytes,1,rep,name=pipeline_files,json=pipelineFiles,proto3" json:"pipeline_files,omitempty"`
}

func (x *Project_Spec_Repository_Status) Reset() {
	*x = Project_Spec_Repository_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec_Repository_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec_Repository_Status) ProtoMessage() {}

func (x *Project_Spec_Repository_Status) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec_Repository_Status.ProtoReflect.Descriptor instead.
func (*Project_Spec_Repository_Status) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 0, 1}
}

func (x *Project_Spec_Repository_Status) GetPipelineFiles() []*Project_Spec_Repository_Status_PipelineFile {
	if x != nil {
		return x.PipelineFiles
	}
	return nil
}

// - branches = [optional, default = []] list of branches that can be build. Regular expressions allowed. Empty list means that all branches can. Used only when RunType BRANCHES is included.
// - tags     = [optional, default = []] list of tags that can be build. Regular expressions allowed. Empty list means that all tags can. Used only when RunType TAGS is included.
type Project_Spec_Repository_Whitelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branches []string `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	Tags     []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Project_Spec_Repository_Whitelist) Reset() {
	*x = Project_Spec_Repository_Whitelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec_Repository_Whitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec_Repository_Whitelist) ProtoMessage() {}

func (x *Project_Spec_Repository_Whitelist) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec_Repository_Whitelist.ProtoReflect.Descriptor instead.
func (*Project_Spec_Repository_Whitelist) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 0, 2}
}

func (x *Project_Spec_Repository_Whitelist) GetBranches() []string {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *Project_Spec_Repository_Whitelist) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// PipelineFile
//
// - path  = [required] path to pipeline file
// - level = [required] on what level status should be created. One for pipeline or one for each block.
type Project_Spec_Repository_Status_PipelineFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string                                            `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Level Project_Spec_Repository_Status_PipelineFile_Level `protobuf:"varint,2,opt,name=level,proto3,enum=InternalApi.Projecthub.Project_Spec_Repository_Status_PipelineFile_Level" json:"level,omitempty"`
}

func (x *Project_Spec_Repository_Status_PipelineFile) Reset() {
	*x = Project_Spec_Repository_Status_PipelineFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec_Repository_Status_PipelineFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec_Repository_Status_PipelineFile) ProtoMessage() {}

func (x *Project_Spec_Repository_Status_PipelineFile) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec_Repository_Status_PipelineFile.ProtoReflect.Descriptor instead.
func (*Project_Spec_Repository_Status_PipelineFile) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 0, 1, 0}
}

func (x *Project_Spec_Repository_Status_PipelineFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Project_Spec_Repository_Status_PipelineFile) GetLevel() Project_Spec_Repository_Status_PipelineFile_Level {
	if x != nil {
		return x.Level
	}
	return Project_Spec_Repository_Status_PipelineFile_BLOCK
}

type Project_Spec_Task_Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Required     bool     `protobuf:"varint,2,opt,name=required,proto3" json:"required,omitempty"`
	Description  string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DefaultValue string   `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Options      []string `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Project_Spec_Task_Parameter) Reset() {
	*x = Project_Spec_Task_Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Spec_Task_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Spec_Task_Parameter) ProtoMessage() {}

func (x *Project_Spec_Task_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Spec_Task_Parameter.ProtoReflect.Descriptor instead.
func (*Project_Spec_Task_Parameter) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 1, 2, 0}
}

func (x *Project_Spec_Task_Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_Spec_Task_Parameter) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Project_Spec_Task_Parameter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project_Spec_Task_Parameter) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Project_Spec_Task_Parameter) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

type Project_Status_Cache struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Project_Status_State `protobuf:"varint,1,opt,name=state,proto3,enum=InternalApi.Projecthub.Project_Status_State" json:"state,omitempty"`
}

func (x *Project_Status_Cache) Reset() {
	*x = Project_Status_Cache{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Status_Cache) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Status_Cache) ProtoMessage() {}

func (x *Project_Status_Cache) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Status_Cache.ProtoReflect.Descriptor instead.
func (*Project_Status_Cache) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 2, 0}
}

func (x *Project_Status_Cache) GetState() Project_Status_State {
	if x != nil {
		return x.State
	}
	return Project_Status_INITIALIZING
}

type Project_Status_ArtifactStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Project_Status_State `protobuf:"varint,1,opt,name=state,proto3,enum=InternalApi.Projecthub.Project_Status_State" json:"state,omitempty"`
}

func (x *Project_Status_ArtifactStore) Reset() {
	*x = Project_Status_ArtifactStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Status_ArtifactStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Status_ArtifactStore) ProtoMessage() {}

func (x *Project_Status_ArtifactStore) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Status_ArtifactStore.ProtoReflect.Descriptor instead.
func (*Project_Status_ArtifactStore) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 2, 1}
}

func (x *Project_Status_ArtifactStore) GetState() Project_Status_State {
	if x != nil {
		return x.State
	}
	return Project_Status_INITIALIZING
}

type Project_Status_Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Project_Status_State `protobuf:"varint,1,opt,name=state,proto3,enum=InternalApi.Projecthub.Project_Status_State" json:"state,omitempty"`
}

func (x *Project_Status_Repository) Reset() {
	*x = Project_Status_Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Status_Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Status_Repository) ProtoMessage() {}

func (x *Project_Status_Repository) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Status_Repository.ProtoReflect.Descriptor instead.
func (*Project_Status_Repository) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 2, 2}
}

func (x *Project_Status_Repository) GetState() Project_Status_State {
	if x != nil {
		return x.State
	}
	return Project_Status_INITIALIZING
}

type Project_Status_Analysis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Project_Status_State `protobuf:"varint,1,opt,name=state,proto3,enum=InternalApi.Projecthub.Project_Status_State" json:"state,omitempty"`
}

func (x *Project_Status_Analysis) Reset() {
	*x = Project_Status_Analysis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Status_Analysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Status_Analysis) ProtoMessage() {}

func (x *Project_Status_Analysis) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Status_Analysis.ProtoReflect.Descriptor instead.
func (*Project_Status_Analysis) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 2, 3}
}

func (x *Project_Status_Analysis) GetState() Project_Status_State {
	if x != nil {
		return x.State
	}
	return Project_Status_INITIALIZING
}

type Project_Status_Permissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Project_Status_State `protobuf:"varint,1,opt,name=state,proto3,enum=InternalApi.Projecthub.Project_Status_State" json:"state,omitempty"`
}

func (x *Project_Status_Permissions) Reset() {
	*x = Project_Status_Permissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_Status_Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_Status_Permissions) ProtoMessage() {}

func (x *Project_Status_Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_Status_Permissions.ProtoReflect.Descriptor instead.
func (*Project_Status_Permissions) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{4, 2, 4}
}

func (x *Project_Status_Permissions) GetState() Project_Status_State {
	if x != nil {
		return x.State
	}
	return Project_Status_INITIALIZING
}

type CheckDeployKeyResponse_DeployKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Fingerprint string               `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PublicKey   string               `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *CheckDeployKeyResponse_DeployKey) Reset() {
	*x = CheckDeployKeyResponse_DeployKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDeployKeyResponse_DeployKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDeployKeyResponse_DeployKey) ProtoMessage() {}

func (x *CheckDeployKeyResponse_DeployKey) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDeployKeyResponse_DeployKey.ProtoReflect.Descriptor instead.
func (*CheckDeployKeyResponse_DeployKey) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{24, 0}
}

func (x *CheckDeployKeyResponse_DeployKey) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CheckDeployKeyResponse_DeployKey) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *CheckDeployKeyResponse_DeployKey) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CheckDeployKeyResponse_DeployKey) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type RegenerateDeployKeyResponse_DeployKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Fingerprint string               `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PublicKey   string               `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *RegenerateDeployKeyResponse_DeployKey) Reset() {
	*x = RegenerateDeployKeyResponse_DeployKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_projecthub_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateDeployKeyResponse_DeployKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateDeployKeyResponse_DeployKey) ProtoMessage() {}

func (x *RegenerateDeployKeyResponse_DeployKey) ProtoReflect() protoreflect.Message {
	mi := &file_projecthub_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateDeployKeyResponse_DeployKey.ProtoReflect.Descriptor instead.
func (*RegenerateDeployKeyResponse_DeployKey) Descriptor() ([]byte, []int) {
	return file_projecthub_proto_rawDescGZIP(), []int{26, 0}
}

func (x *RegenerateDeployKeyResponse_DeployKey) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RegenerateDeployKeyResponse_DeployKey) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *RegenerateDeployKeyResponse_DeployKey) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RegenerateDeployKeyResponse_DeployKey) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

var File_projecthub_proto protoreflect.FileDescriptor

var file_projecthub_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xea, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x61, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x36, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50,
	0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x22, 0x44, 0x0a,
	0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0xc4,
	0x22, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x38, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xbd, 0x01, 0x0a, 0x08, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xd7, 0x17, 0x0a, 0x04, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x4f, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x4e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x4f, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x60, 0x0a, 0x11, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x64, 0x65, 0x62, 0x75, 0x67, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x12, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x1a, 0x81, 0x0a, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x4e, 0x0a,
	0x06, 0x72, 0x75, 0x6e, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x37, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x52,
	0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x4f, 0x6e, 0x12, 0x74, 0x0a,
	0x14, 0x66, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x6f, 0x72,
	0x6b, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52,
	0x12, 0x66, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x03, 0x72, 0x75, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x57, 0x0a, 0x09,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x5c, 0x0a,
	0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x1a, 0x70, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x12,
	0x31, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x73, 0x1a, 0x9c, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6a, 0x0a,
	0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0xa5, 0x01, 0x0a, 0x0c, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x5f,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0x20, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x01, 0x1a, 0x3b, 0x0a, 0x09, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x67,
	0x0a, 0x07, 0x52, 0x75, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x52, 0x41,
	0x4e, 0x43, 0x48, 0x45, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x41, 0x47, 0x53, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x53, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x4f, 0x52, 0x4b, 0x45, 0x44, 0x5f, 0x50,
	0x55, 0x4c, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x53, 0x10, 0x03, 0x12, 0x17,
	0x0a, 0x13, 0x44, 0x52, 0x41, 0x46, 0x54, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x53, 0x10, 0x04, 0x42, 0x0d, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x1a, 0x95, 0x02, 0x0a, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x1a, 0xbf,
	0x04, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x53, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9c, 0x01, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02,
	0x22, 0x25, 0x0a, 0x0a, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50,
	0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x22, 0x7b, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x50,
	0x54, 0x59, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f,
	0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x4e, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x4f, 0x52, 0x4b, 0x45, 0x44, 0x5f, 0x50, 0x55, 0x4c,
	0x4c, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x54,
	0x41, 0x47, 0x10, 0x05, 0x1a, 0xde, 0x07, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x52, 0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x12, 0x5b, 0x0a, 0x0e, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4b, 0x0a, 0x08, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x08, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4b, 0x0a,
	0x05, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x53, 0x0a, 0x0d, 0x41, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a,
	0x50, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x42, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x1a, 0x4e, 0x0a, 0x08, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x42, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x1a, 0x51, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x0c, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x22, 0xf2, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x66, 0x74, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73,
	0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xff, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4b,
	0x65, 0x79, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x51, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52,
	0x45, 0x56, 0x49, 0x4f, 0x55, 0x53, 0x10, 0x01, 0x22, 0xeb, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4b, 0x65, 0x79, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x6f, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x73, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x8f,
	0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x8b, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x6f, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x73, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x95,
	0x01, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73,
	0x6b, 0x69, 0x70, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x8d, 0x01,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xc6, 0x01,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x39, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x6f,
	0x6d, 0x69, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x61,
	0x6e, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x6f, 0x6d, 0x69, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x73, 0x41, 0x6e,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x75, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a,
	0x0f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x61, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x0d, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2c,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x68, 0x0a, 0x15,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd3, 0x02, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65,
	0x79, 0x52, 0x09, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x9d, 0x01, 0x0a,
	0x09, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x6d, 0x0a, 0x1a,
	0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xdd, 0x02, 0x0a, 0x1b,
	0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79,
	0x52, 0x09, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x9d, 0x01, 0x0a, 0x09,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x66, 0x0a, 0x13, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39,
	0x0a, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x52, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x22, 0x6b, 0x0a, 0x18, 0x52, 0x65, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x22, 0x1b, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x85,
	0x01, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x6b, 0x41,
	0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x39, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x15,
	0x46, 0x6f, 0x72, 0x6b, 0x41, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x69, 0x0a, 0x16, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a,
	0x17, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x17, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x1e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x1f, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x80,
	0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x6f, 0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x32, 0x8b, 0x0f, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x73, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b,
	0x65, 0x79, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x27, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0c,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x2b, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61,
	0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x12, 0x26, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x26, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x2d, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x32, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x2b, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x30, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01,
	0x0a, 0x17, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x36, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x12, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x6b, 0x41,
	0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x41, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x46, 0x6f, 0x72, 0x6b, 0x41, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0f, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41,
	0x70, 0x70, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x65, 0x6d, 0x61, 0x70, 0x68, 0x6f, 0x72, 0x65, 0x69, 0x6f, 0x2f, 0x73, 0x65, 0x6d, 0x61, 0x70,
	0x68, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x68, 0x75, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_projecthub_proto_rawDescOnce sync.Once
	file_projecthub_proto_rawDescData = file_projecthub_proto_rawDesc
)

func file_projecthub_proto_rawDescGZIP() []byte {
	file_projecthub_proto_rawDescOnce.Do(func() {
		file_projecthub_proto_rawDescData = protoimpl.X.CompressGZIP(file_projecthub_proto_rawDescData)
	})
	return file_projecthub_proto_rawDescData
}

var file_projecthub_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_projecthub_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_projecthub_proto_goTypes = []interface{}{
	(ResponseMeta_Code)(0),                                 // 0: InternalApi.Projecthub.ResponseMeta.Code
	(Project_Spec_Visibility)(0),                           // 1: InternalApi.Projecthub.Project.Spec.Visibility
	(Project_Spec_PermissionType)(0),                       // 2: InternalApi.Projecthub.Project.Spec.PermissionType
	(Project_Spec_Repository_RunType)(0),                   // 3: InternalApi.Projecthub.Project.Spec.Repository.RunType
	(Project_Spec_Repository_Status_PipelineFile_Level)(0), // 4: InternalApi.Projecthub.Project.Spec.Repository.Status.PipelineFile.Level
	(Project_Spec_Scheduler_Status)(0),                     // 5: InternalApi.Projecthub.Project.Spec.Scheduler.Status
	(Project_Spec_Task_Status)(0),                          // 6: InternalApi.Projecthub.Project.Spec.Task.Status
	(Project_Status_State)(0),                              // 7: InternalApi.Projecthub.Project.Status.State
	(ListKeysetRequest_Direction)(0),                       // 8: InternalApi.Projecthub.ListKeysetRequest.Direction
	(*RequestMeta)(nil),                                    // 9: InternalApi.Projecthub.RequestMeta
	(*ResponseMeta)(nil),                                   // 10: InternalApi.Projecthub.ResponseMeta
	(*PaginationRequest)(nil),                              // 11: InternalApi.Projecthub.PaginationRequest
	(*PaginationResponse)(nil),                             // 12: InternalApi.Projecthub.PaginationResponse
	(*Project)(nil),                                        // 13: InternalApi.Projecthub.Project
	(*ListRequest)(nil),                                    // 14: InternalApi.Projecthub.ListRequest
	(*ListResponse)(nil),                                   // 15: InternalApi.Projecthub.ListResponse
	(*ListKeysetRequest)(nil),                              // 16: InternalApi.Projecthub.ListKeysetRequest
	(*ListKeysetResponse)(nil),                             // 17: InternalApi.Projecthub.ListKeysetResponse
	(*DescribeRequest)(nil),                                // 18: InternalApi.Projecthub.DescribeRequest
	(*DescribeResponse)(nil),                               // 19: InternalApi.Projecthub.DescribeResponse
	(*DescribeManyRequest)(nil),                            // 20: InternalApi.Projecthub.DescribeManyRequest
	(*DescribeManyResponse)(nil),                           // 21: InternalApi.Projecthub.DescribeManyResponse
	(*CreateRequest)(nil),                                  // 22: InternalApi.Projecthub.CreateRequest
	(*CreateResponse)(nil),                                 // 23: InternalApi.Projecthub.CreateResponse
	(*UpdateRequest)(nil),                                  // 24: InternalApi.Projecthub.UpdateRequest
	(*UpdateResponse)(nil),                                 // 25: InternalApi.Projecthub.UpdateResponse
	(*DestroyRequest)(nil),                                 // 26: InternalApi.Projecthub.DestroyRequest
	(*DestroyResponse)(nil),                                // 27: InternalApi.Projecthub.DestroyResponse
	(*RestoreRequest)(nil),                                 // 28: InternalApi.Projecthub.RestoreRequest
	(*RestoreResponse)(nil),                                // 29: InternalApi.Projecthub.RestoreResponse
	(*UsersRequest)(nil),                                   // 30: InternalApi.Projecthub.UsersRequest
	(*UsersResponse)(nil),                                  // 31: InternalApi.Projecthub.UsersResponse
	(*CheckDeployKeyRequest)(nil),                          // 32: InternalApi.Projecthub.CheckDeployKeyRequest
	(*CheckDeployKeyResponse)(nil),                         // 33: InternalApi.Projecthub.CheckDeployKeyResponse
	(*RegenerateDeployKeyRequest)(nil),                     // 34: InternalApi.Projecthub.RegenerateDeployKeyRequest
	(*RegenerateDeployKeyResponse)(nil),                    // 35: InternalApi.Projecthub.RegenerateDeployKeyResponse
	(*CheckWebhookRequest)(nil),                            // 36: InternalApi.Projecthub.CheckWebhookRequest
	(*CheckWebhookResponse)(nil),                           // 37: InternalApi.Projecthub.CheckWebhookResponse
	(*RegenerateWebhookRequest)(nil),                       // 38: InternalApi.Projecthub.RegenerateWebhookRequest
	(*RegenerateWebhookResponse)(nil),                      // 39: InternalApi.Projecthub.RegenerateWebhookResponse
	(*Webhook)(nil),                                        // 40: InternalApi.Projecthub.Webhook
	(*ChangeProjectOwnerRequest)(nil),                      // 41: InternalApi.Projecthub.ChangeProjectOwnerRequest
	(*ChangeProjectOwnerResponse)(nil),                     // 42: InternalApi.Projecthub.ChangeProjectOwnerResponse
	(*ForkAndCreateRequest)(nil),                           // 43: InternalApi.Projecthub.ForkAndCreateRequest
	(*ForkAndCreateResponse)(nil),                          // 44: InternalApi.Projecthub.ForkAndCreateResponse
	(*GithubAppSwitchRequest)(nil),                         // 45: InternalApi.Projecthub.GithubAppSwitchRequest
	(*GithubAppSwitchResponse)(nil),                        // 46: InternalApi.Projecthub.GithubAppSwitchResponse
	(*FinishOnboardingRequest)(nil),                        // 47: InternalApi.Projecthub.FinishOnboardingRequest
	(*FinishOnboardingResponse)(nil),                       // 48: InternalApi.Projecthub.FinishOnboardingResponse
	(*RegenerateWebhookSecretRequest)(nil),                 // 49: InternalApi.Projecthub.RegenerateWebhookSecretRequest
	(*RegenerateWebhookSecretResponse)(nil),                // 50: InternalApi.Projecthub.RegenerateWebhookSecretResponse
	(*ProjectCreated)(nil),                                 // 51: InternalApi.Projecthub.ProjectCreated
	(*ProjectDeleted)(nil),                                 // 52: InternalApi.Projecthub.ProjectDeleted
	(*ProjectRestored)(nil),                                // 53: InternalApi.Projecthub.ProjectRestored
	(*ProjectUpdated)(nil),                                 // 54: InternalApi.Projecthub.ProjectUpdated
	(*CollaboratorsChanged)(nil),                           // 55: InternalApi.Projecthub.CollaboratorsChanged
	(*ResponseMeta_Status)(nil),                            // 56: InternalApi.Projecthub.ResponseMeta.Status
	(*Project_Metadata)(nil),                               // 57: InternalApi.Projecthub.Project.Metadata
	(*Project_Spec)(nil),                                   // 58: InternalApi.Projecthub.Project.Spec
	(*Project_Status)(nil),                                 // 59: InternalApi.Projecthub.Project.Status
	(*Project_Spec_Repository)(nil),                        // 60: InternalApi.Projecthub.Project.Spec.Repository
	(*Project_Spec_Scheduler)(nil),                         // 61: InternalApi.Projecthub.Project.Spec.Scheduler
	(*Project_Spec_Task)(nil),                              // 62: InternalApi.Projecthub.Project.Spec.Task
	(*Project_Spec_Repository_ForkedPullRequests)(nil),     // 63: InternalApi.Projecthub.Project.Spec.Repository.ForkedPullRequests
	(*Project_Spec_Repository_Status)(nil),                 // 64: InternalApi.Projecthub.Project.Spec.Repository.Status
	(*Project_Spec_Repository_Whitelist)(nil),              // 65: InternalApi.Projecthub.Project.Spec.Repository.Whitelist
	(*Project_Spec_Repository_Status_PipelineFile)(nil),    // 66: InternalApi.Projecthub.Project.Spec.Repository.Status.PipelineFile
	(*Project_Spec_Task_Parameter)(nil),                    // 67: InternalApi.Projecthub.Project.Spec.Task.Parameter
	(*Project_Status_Cache)(nil),                           // 68: InternalApi.Projecthub.Project.Status.Cache
	(*Project_Status_ArtifactStore)(nil),                   // 69: InternalApi.Projecthub.Project.Status.ArtifactStore
	(*Project_Status_Repository)(nil),                      // 70: InternalApi.Projecthub.Project.Status.Repository
	(*Project_Status_Analysis)(nil),                        // 71: InternalApi.Projecthub.Project.Status.Analysis
	(*Project_Status_Permissions)(nil),                     // 72: InternalApi.Projecthub.Project.Status.Permissions
	(*CheckDeployKeyResponse_DeployKey)(nil),               // 73: InternalApi.Projecthub.CheckDeployKeyResponse.DeployKey
	(*RegenerateDeployKeyResponse_DeployKey)(nil),          // 74: InternalApi.Projecthub.RegenerateDeployKeyResponse.DeployKey
	(*timestamp.Timestamp)(nil),                            // 75: google.protobuf.Timestamp
	(*user.User)(nil),                                      // 76: InternalApi.User.User
	(repository_integrator.IntegrationType)(0),             // 77: InternalApi.RepositoryIntegrator.IntegrationType
}
var file_projecthub_proto_depIdxs = []int32{
	56,  // 0: InternalApi.Projecthub.ResponseMeta.status:type_name -> InternalApi.Projecthub.ResponseMeta.Status
	57,  // 1: InternalApi.Projecthub.Project.metadata:type_name -> InternalApi.Projecthub.Project.Metadata
	58,  // 2: InternalApi.Projecthub.Project.spec:type_name -> InternalApi.Projecthub.Project.Spec
	59,  // 3: InternalApi.Projecthub.Project.status:type_name -> InternalApi.Projecthub.Project.Status
	9,   // 4: InternalApi.Projecthub.ListRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	11,  // 5: InternalApi.Projecthub.ListRequest.pagination:type_name -> InternalApi.Projecthub.PaginationRequest
	10,  // 6: InternalApi.Projecthub.ListResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	12,  // 7: InternalApi.Projecthub.ListResponse.pagination:type_name -> InternalApi.Projecthub.PaginationResponse
	13,  // 8: InternalApi.Projecthub.ListResponse.projects:type_name -> InternalApi.Projecthub.Project
	9,   // 9: InternalApi.Projecthub.ListKeysetRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	8,   // 10: InternalApi.Projecthub.ListKeysetRequest.direction:type_name -> InternalApi.Projecthub.ListKeysetRequest.Direction
	75,  // 11: InternalApi.Projecthub.ListKeysetRequest.created_after:type_name -> google.protobuf.Timestamp
	10,  // 12: InternalApi.Projecthub.ListKeysetResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	13,  // 13: InternalApi.Projecthub.ListKeysetResponse.projects:type_name -> InternalApi.Projecthub.Project
	9,   // 14: InternalApi.Projecthub.DescribeRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 15: InternalApi.Projecthub.DescribeResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	13,  // 16: InternalApi.Projecthub.DescribeResponse.project:type_name -> InternalApi.Projecthub.Project
	9,   // 17: InternalApi.Projecthub.DescribeManyRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 18: InternalApi.Projecthub.DescribeManyResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	13,  // 19: InternalApi.Projecthub.DescribeManyResponse.projects:type_name -> InternalApi.Projecthub.Project
	9,   // 20: InternalApi.Projecthub.CreateRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	13,  // 21: InternalApi.Projecthub.CreateRequest.project:type_name -> InternalApi.Projecthub.Project
	10,  // 22: InternalApi.Projecthub.CreateResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	13,  // 23: InternalApi.Projecthub.CreateResponse.project:type_name -> InternalApi.Projecthub.Project
	9,   // 24: InternalApi.Projecthub.UpdateRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	13,  // 25: InternalApi.Projecthub.UpdateRequest.project:type_name -> InternalApi.Projecthub.Project
	10,  // 26: InternalApi.Projecthub.UpdateResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	13,  // 27: InternalApi.Projecthub.UpdateResponse.project:type_name -> InternalApi.Projecthub.Project
	9,   // 28: InternalApi.Projecthub.DestroyRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 29: InternalApi.Projecthub.DestroyResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	9,   // 30: InternalApi.Projecthub.RestoreRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 31: InternalApi.Projecthub.RestoreResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	9,   // 32: InternalApi.Projecthub.UsersRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 33: InternalApi.Projecthub.UsersResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	76,  // 34: InternalApi.Projecthub.UsersResponse.users:type_name -> InternalApi.User.User
	9,   // 35: InternalApi.Projecthub.CheckDeployKeyRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 36: InternalApi.Projecthub.CheckDeployKeyResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	73,  // 37: InternalApi.Projecthub.CheckDeployKeyResponse.deploy_key:type_name -> InternalApi.Projecthub.CheckDeployKeyResponse.DeployKey
	9,   // 38: InternalApi.Projecthub.RegenerateDeployKeyRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 39: InternalApi.Projecthub.RegenerateDeployKeyResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	74,  // 40: InternalApi.Projecthub.RegenerateDeployKeyResponse.deploy_key:type_name -> InternalApi.Projecthub.RegenerateDeployKeyResponse.DeployKey
	9,   // 41: InternalApi.Projecthub.CheckWebhookRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 42: InternalApi.Projecthub.CheckWebhookResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	40,  // 43: InternalApi.Projecthub.CheckWebhookResponse.webhook:type_name -> InternalApi.Projecthub.Webhook
	9,   // 44: InternalApi.Projecthub.RegenerateWebhookRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 45: InternalApi.Projecthub.RegenerateWebhookResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	40,  // 46: InternalApi.Projecthub.RegenerateWebhookResponse.webhook:type_name -> InternalApi.Projecthub.Webhook
	9,   // 47: InternalApi.Projecthub.ChangeProjectOwnerRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 48: InternalApi.Projecthub.ChangeProjectOwnerResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	9,   // 49: InternalApi.Projecthub.ForkAndCreateRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	13,  // 50: InternalApi.Projecthub.ForkAndCreateRequest.project:type_name -> InternalApi.Projecthub.Project
	10,  // 51: InternalApi.Projecthub.ForkAndCreateResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	13,  // 52: InternalApi.Projecthub.ForkAndCreateResponse.project:type_name -> InternalApi.Projecthub.Project
	9,   // 53: InternalApi.Projecthub.GithubAppSwitchRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 54: InternalApi.Projecthub.GithubAppSwitchResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	9,   // 55: InternalApi.Projecthub.FinishOnboardingRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 56: InternalApi.Projecthub.FinishOnboardingResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	9,   // 57: InternalApi.Projecthub.RegenerateWebhookSecretRequest.metadata:type_name -> InternalApi.Projecthub.RequestMeta
	10,  // 58: InternalApi.Projecthub.RegenerateWebhookSecretResponse.metadata:type_name -> InternalApi.Projecthub.ResponseMeta
	75,  // 59: InternalApi.Projecthub.ProjectCreated.timestamp:type_name -> google.protobuf.Timestamp
	75,  // 60: InternalApi.Projecthub.ProjectDeleted.timestamp:type_name -> google.protobuf.Timestamp
	75,  // 61: InternalApi.Projecthub.ProjectRestored.timestamp:type_name -> google.protobuf.Timestamp
	75,  // 62: InternalApi.Projecthub.ProjectUpdated.timestamp:type_name -> google.protobuf.Timestamp
	75,  // 63: InternalApi.Projecthub.CollaboratorsChanged.timestamp:type_name -> google.protobuf.Timestamp
	0,   // 64: InternalApi.Projecthub.ResponseMeta.Status.code:type_name -> InternalApi.Projecthub.ResponseMeta.Code
	75,  // 65: InternalApi.Projecthub.Project.Metadata.created_at:type_name -> google.protobuf.Timestamp
	60,  // 66: InternalApi.Projecthub.Project.Spec.repository:type_name -> InternalApi.Projecthub.Project.Spec.Repository
	61,  // 67: InternalApi.Projecthub.Project.Spec.schedulers:type_name -> InternalApi.Projecthub.Project.Spec.Scheduler
	1,   // 68: InternalApi.Projecthub.Project.Spec.visibility:type_name -> InternalApi.Projecthub.Project.Spec.Visibility
	2,   // 69: InternalApi.Projecthub.Project.Spec.debug_permissions:type_name -> InternalApi.Projecthub.Project.Spec.PermissionType
	2,   // 70: InternalApi.Projecthub.Project.Spec.attach_permissions:type_name -> InternalApi.Projecthub.Project.Spec.PermissionType
	62,  // 71: InternalApi.Projecthub.Project.Spec.tasks:type_name -> InternalApi.Projecthub.Project.Spec.Task
	7,   // 72: InternalApi.Projecthub.Project.Status.state:type_name -> InternalApi.Projecthub.Project.Status.State
	68,  // 73: InternalApi.Projecthub.Project.Status.cache:type_name -> InternalApi.Projecthub.Project.Status.Cache
	69,  // 74: InternalApi.Projecthub.Project.Status.artifact_store:type_name -> InternalApi.Projecthub.Project.Status.ArtifactStore
	70,  // 75: InternalApi.Projecthub.Project.Status.repository:type_name -> InternalApi.Projecthub.Project.Status.Repository
	71,  // 76: InternalApi.Projecthub.Project.Status.analysis:type_name -> InternalApi.Projecthub.Project.Status.Analysis
	72,  // 77: InternalApi.Projecthub.Project.Status.permissions:type_name -> InternalApi.Projecthub.Project.Status.Permissions
	3,   // 78: InternalApi.Projecthub.Project.Spec.Repository.run_on:type_name -> InternalApi.Projecthub.Project.Spec.Repository.RunType
	63,  // 79: InternalApi.Projecthub.Project.Spec.Repository.forked_pull_requests:type_name -> InternalApi.Projecthub.Project.Spec.Repository.ForkedPullRequests
	64,  // 80: InternalApi.Projecthub.Project.Spec.Repository.status:type_name -> InternalApi.Projecthub.Project.Spec.Repository.Status
	65,  // 81: InternalApi.Projecthub.Project.Spec.Repository.whitelist:type_name -> InternalApi.Projecthub.Project.Spec.Repository.Whitelist
	77,  // 82: InternalApi.Projecthub.Project.Spec.Repository.integration_type:type_name -> InternalApi.RepositoryIntegrator.IntegrationType
	5,   // 83: InternalApi.Projecthub.Project.Spec.Scheduler.status:type_name -> InternalApi.Projecthub.Project.Spec.Scheduler.Status
	6,   // 84: InternalApi.Projecthub.Project.Spec.Task.status:type_name -> InternalApi.Projecthub.Project.Spec.Task.Status
	67,  // 85: InternalApi.Projecthub.Project.Spec.Task.parameters:type_name -> InternalApi.Projecthub.Project.Spec.Task.Parameter
	66,  // 86: InternalApi.Projecthub.Project.Spec.Repository.Status.pipeline_files:type_name -> InternalApi.Projecthub.Project.Spec.Repository.Status.PipelineFile
	4,   // 87: InternalApi.Projecthub.Project.Spec.Repository.Status.PipelineFile.level:type_name -> InternalApi.Projecthub.Project.Spec.Repository.Status.PipelineFile.Level
	7,   // 88: InternalApi.Projecthub.Project.Status.Cache.state:type_name -> InternalApi.Projecthub.Project.Status.State
	7,   // 89: InternalApi.Projecthub.Project.Status.ArtifactStore.state:type_name -> InternalApi.Projecthub.Project.Status.State
	7,   // 90: InternalApi.Projecthub.Project.Status.Repository.state:type_name -> InternalApi.Projecthub.Project.Status.State
	7,   // 91: InternalApi.Projecthub.Project.Status.Analysis.state:type_name -> InternalApi.Projecthub.Project.Status.State
	7,   // 92: InternalApi.Projecthub.Project.Status.Permissions.state:type_name -> InternalApi.Projecthub.Project.Status.State
	75,  // 93: InternalApi.Projecthub.CheckDeployKeyResponse.DeployKey.created_at:type_name -> google.protobuf.Timestamp
	75,  // 94: InternalApi.Projecthub.RegenerateDeployKeyResponse.DeployKey.created_at:type_name -> google.protobuf.Timestamp
	14,  // 95: InternalApi.Projecthub.ProjectService.List:input_type -> InternalApi.Projecthub.ListRequest
	16,  // 96: InternalApi.Projecthub.ProjectService.ListKeyset:input_type -> InternalApi.Projecthub.ListKeysetRequest
	18,  // 97: InternalApi.Projecthub.ProjectService.Describe:input_type -> InternalApi.Projecthub.DescribeRequest
	20,  // 98: InternalApi.Projecthub.ProjectService.DescribeMany:input_type -> InternalApi.Projecthub.DescribeManyRequest
	22,  // 99: InternalApi.Projecthub.ProjectService.Create:input_type -> InternalApi.Projecthub.CreateRequest
	24,  // 100: InternalApi.Projecthub.ProjectService.Update:input_type -> InternalApi.Projecthub.UpdateRequest
	26,  // 101: InternalApi.Projecthub.ProjectService.Destroy:input_type -> InternalApi.Projecthub.DestroyRequest
	28,  // 102: InternalApi.Projecthub.ProjectService.Restore:input_type -> InternalApi.Projecthub.RestoreRequest
	30,  // 103: InternalApi.Projecthub.ProjectService.Users:input_type -> InternalApi.Projecthub.UsersRequest
	32,  // 104: InternalApi.Projecthub.ProjectService.CheckDeployKey:input_type -> InternalApi.Projecthub.CheckDeployKeyRequest
	34,  // 105: InternalApi.Projecthub.ProjectService.RegenerateDeployKey:input_type -> InternalApi.Projecthub.RegenerateDeployKeyRequest
	36,  // 106: InternalApi.Projecthub.ProjectService.CheckWebhook:input_type -> InternalApi.Projecthub.CheckWebhookRequest
	38,  // 107: InternalApi.Projecthub.ProjectService.RegenerateWebhook:input_type -> InternalApi.Projecthub.RegenerateWebhookRequest
	49,  // 108: InternalApi.Projecthub.ProjectService.RegenerateWebhookSecret:input_type -> InternalApi.Projecthub.RegenerateWebhookSecretRequest
	41,  // 109: InternalApi.Projecthub.ProjectService.ChangeProjectOwner:input_type -> InternalApi.Projecthub.ChangeProjectOwnerRequest
	43,  // 110: InternalApi.Projecthub.ProjectService.ForkAndCreate:input_type -> InternalApi.Projecthub.ForkAndCreateRequest
	45,  // 111: InternalApi.Projecthub.ProjectService.GithubAppSwitch:input_type -> InternalApi.Projecthub.GithubAppSwitchRequest
	47,  // 112: InternalApi.Projecthub.ProjectService.FinishOnboarding:input_type -> InternalApi.Projecthub.FinishOnboardingRequest
	15,  // 113: InternalApi.Projecthub.ProjectService.List:output_type -> InternalApi.Projecthub.ListResponse
	17,  // 114: InternalApi.Projecthub.ProjectService.ListKeyset:output_type -> InternalApi.Projecthub.ListKeysetResponse
	19,  // 115: InternalApi.Projecthub.ProjectService.Describe:output_type -> InternalApi.Projecthub.DescribeResponse
	21,  // 116: InternalApi.Projecthub.ProjectService.DescribeMany:output_type -> InternalApi.Projecthub.DescribeManyResponse
	23,  // 117: InternalApi.Projecthub.ProjectService.Create:output_type -> InternalApi.Projecthub.CreateResponse
	25,  // 118: InternalApi.Projecthub.ProjectService.Update:output_type -> InternalApi.Projecthub.UpdateResponse
	27,  // 119: InternalApi.Projecthub.ProjectService.Destroy:output_type -> InternalApi.Projecthub.DestroyResponse
	29,  // 120: InternalApi.Projecthub.ProjectService.Restore:output_type -> InternalApi.Projecthub.RestoreResponse
	31,  // 121: InternalApi.Projecthub.ProjectService.Users:output_type -> InternalApi.Projecthub.UsersResponse
	33,  // 122: InternalApi.Projecthub.ProjectService.CheckDeployKey:output_type -> InternalApi.Projecthub.CheckDeployKeyResponse
	35,  // 123: InternalApi.Projecthub.ProjectService.RegenerateDeployKey:output_type -> InternalApi.Projecthub.RegenerateDeployKeyResponse
	37,  // 124: InternalApi.Projecthub.ProjectService.CheckWebhook:output_type -> InternalApi.Projecthub.CheckWebhookResponse
	39,  // 125: InternalApi.Projecthub.ProjectService.RegenerateWebhook:output_type -> InternalApi.Projecthub.RegenerateWebhookResponse
	50,  // 126: InternalApi.Projecthub.ProjectService.RegenerateWebhookSecret:output_type -> InternalApi.Projecthub.RegenerateWebhookSecretResponse
	42,  // 127: InternalApi.Projecthub.ProjectService.ChangeProjectOwner:output_type -> InternalApi.Projecthub.ChangeProjectOwnerResponse
	44,  // 128: InternalApi.Projecthub.ProjectService.ForkAndCreate:output_type -> InternalApi.Projecthub.ForkAndCreateResponse
	46,  // 129: InternalApi.Projecthub.ProjectService.GithubAppSwitch:output_type -> InternalApi.Projecthub.GithubAppSwitchResponse
	48,  // 130: InternalApi.Projecthub.ProjectService.FinishOnboarding:output_type -> InternalApi.Projecthub.FinishOnboardingResponse
	113, // [113:131] is the sub-list for method output_type
	95,  // [95:113] is the sub-list for method input_type
	95,  // [95:95] is the sub-list for extension type_name
	95,  // [95:95] is the sub-list for extension extendee
	0,   // [0:95] is the sub-list for field type_name
}

func init() { file_projecthub_proto_init() }
func file_projecthub_proto_init() {
	if File_projecthub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_projecthub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKeysetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKeysetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeManyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeManyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDeployKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDeployKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateDeployKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateDeployKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Webhook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeProjectOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeProjectOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkAndCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkAndCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubAppSwitchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GithubAppSwitchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishOnboardingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishOnboardingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateWebhookSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateWebhookSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectRestored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollaboratorsChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMeta_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec_Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec_Scheduler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec_Repository_ForkedPullRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec_Repository_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec_Repository_Whitelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec_Repository_Status_PipelineFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Spec_Task_Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Status_Cache); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Status_ArtifactStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Status_Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Status_Analysis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_Status_Permissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDeployKeyResponse_DeployKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_projecthub_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateDeployKeyResponse_DeployKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_projecthub_proto_msgTypes[51].OneofWrappers = []interface{}{
		(*Project_Spec_Repository_Run)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_projecthub_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_projecthub_proto_goTypes,
		DependencyIndexes: file_projecthub_proto_depIdxs,
		EnumInfos:         file_projecthub_proto_enumTypes,
		MessageInfos:      file_projecthub_proto_msgTypes,
	}.Build()
	File_projecthub_proto = out.File
	file_projecthub_proto_rawDesc = nil
	file_projecthub_proto_goTypes = nil
	file_projecthub_proto_depIdxs = nil
}
