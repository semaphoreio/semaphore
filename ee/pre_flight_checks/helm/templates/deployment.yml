{{- if eq .Values.global.edition "ee" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name | quote }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  template:
    metadata:
      name: {{ .Chart.Name }}-pod
      labels:
        app: {{ .Chart.Name }}
    spec:
      automountServiceAccountToken: false
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.global.image.registry }}/{{ .Values.image }}:{{ .Values.imageTag }}"
        command: ["/bin/sh", "-c"]
        args: ["bin/pre_flight_checks eval \"PreFlightChecks.ReleaseTasks.migrate()\" && bin/pre_flight_checks start"]
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        ports:
        - containerPort: 50051
        env:
        - name: POSTGRES_DB_SSL
          value: {{ .Values.global.database.ssl | quote }}
        - name: DB_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.database.secretName }}
              key: host
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.database.secretName }}
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.database.secretName }}
              key: password
        - name: AMQP_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.rabbitmq.secretName }}
              key: amqp-url
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- if .Values.global.statsd.enabled }}
            - name: METRICS_NAMESPACE
              value: {{ .Values.global.statsd.metricsNamespace }}
{{- end }}
        startupProbe:
          grpc:
            port: 50051
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
        livenessProbe:
          grpc:
            port: 50051
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3

{{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- end }}
{{- if .Values.global.statsd.enabled }}
        - name: {{ .Chart.Name }}-statsd
          image: "{{ .Values.global.image.registry }}/{{ .Values.global.statsd.image }}:{{ .Values.global.statsd.imageTag }}"
          env:
            - name: FLUSH_INTERVAL
              value: "60000"
            - name: GRAPHITE_HOST
              value: {{ .Values.global.statsd.graphiteHost }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
{{- if .Values.statsd.resources }}
          resources:
{{ toYaml .Values.statsd.resources | indent 13 }}
{{- end }}
{{- end }}
{{- end }}